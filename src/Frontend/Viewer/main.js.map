{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/autoconfig.interceptor.ts","./src/app/alarm-object/alarm.ts","./src/app/alarm-object/decoder/decoder.ts","./src/app/alarm-object/decoder/jdsd51.decoder.ts","./src/app/alarm-object/decoder/jdsd51.error.ts","./src/app/alarmtable/alarmtable.component.html","./src/app/alarmtable/alarmtable.component.ts","./src/app/api/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/eventlog/eventlog.component.html","./src/app/eventlog/eventlog.component.ts","./src/app/ipc/ipc.service.ts","./src/app/loading/loading.component.html","./src/app/loading/loading.component.ts","./src/app/restrictedaccess/restrictedaccess.component.html","./src/app/restrictedaccess/restrictedaccess.component.ts","./src/app/viewer/viewer.component.html","./src/app/viewer/viewer.component.ts","./src/environments/environment.ts","./src/main.ts","external \"electron\""],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;;;ACLA;IAKE,mBACS,WAAuB,EACvB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAY;QACvB,WAAM,GAAN,MAAM,CAAQ;IACnB,CAAC;IAEL,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IACrC,CAAC;;oBAxBH;CAyBC;AAfqB;;;;;;;;;;;;;ACPtB;AAAA;AAAA;AAAA;AAA+D;AACM;AAErE;IAQI,yBAAmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN3B,2BAAsB,GAAG,KAAK,CAAC;QACvC,sFAAsF;QACtF,oCAAoC;QAC5B,wBAAmB,GAAyB,IAAI,oDAAe,CACnE,IAAI,CACP,CAAC;IACoC,CAAC;IAEvC,mCAAS,GAAT,UACI,OAAyB,EACzB,IAAiB;QAFrB,iBA2BC;QAtBG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aAC1B,IAAI,CACD,iEAAU,CAAC,eAAK;YAChB,6BAA6B;YAE7B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBAC/B,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;aAC5B;YAED,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACtB,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;aAC5B;YAED,OAAO,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CACzB,gEAAS,CAAC;gBACN,OAAO,IAAI,CAAC,MAAM,CAAC,KAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7D,CAAC,CAAC,EACF,iEAAU,CAAE,aAAG;gBACX,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC,CAAC,CACL,CAAC;QACN,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,gDAAsB,GAAtB,UAAuB,OAAO;QAC1B,sCAAsC;QACtC,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAE5C,gEAAgE;QAChE,qCAAqC;QACrC,IAAI,CAAC,WAAW,EAAE;YACd,OAAO,OAAO,CAAC;SAClB;QAED,kEAAkE;QAClE,OAAO,OAAO,CAAC,KAAK,CAAC;YACjB,UAAU,EAAE;gBACR,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;aACzC;SACJ,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC5DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACN;AACJ;AA8B3C;IAGI,eAAmB,MAAc,EAAS,QAAe;QAAtC,WAAM,GAAN,MAAM,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAO;QAazD,UAAK,GAAU,EAAE,CAAC;QAIV,eAAU,GAAG,KAAK,CAAC;QAfvB,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAU,WAAW,CAAC,CAAC;QAC/D,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAE/B,CAAC;IAaM,kCAAkB,GAAzB;QACI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,sBAAsB,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,sBAAI,6BAAU;aAAd;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAI,yBAAM;aAAV;YACI,OAAO;gBACH,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC;QACN,CAAC;;;OAAA;IAED,sBAAI,+BAAY;aAAhB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAED,2BAAW,GAAX,UAAY,QAAe;QACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,wBAAQ,GAAR,UAAS,KAAa;QAClB,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,uBAAO,GAAP,UAAQ,IAAY;QAChB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAGM,wBAAQ,GAAf,UAAgB,CAAY;QACxB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACb,yBAAyB;IAC7B,CAAC;IAEM,wBAAQ,GAAf,UAAgB,QAAgB,EAAE,aAAsB,EAAE,GAAuB;QAAjF,iBAYC;QAXG,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;aAClC;SACJ;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,kDAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAE;YACzC,KAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CACD,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEM,qBAAK,GAAZ,UAAa,aAAsB,EAAE,GAAuB;QAA5D,iBAsBC;QArBG,IAAI,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;SAAE;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAA6B,CAAC,GAAG,GAAG,sBAAsB,CAAC;QACjE,IAAI,CAAC,QAAQ,GAAG,qDAAQ,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAE,aAAG;YACzD,IAAK,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;gBAChB,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACxB;iBAAM;gBACH,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC1B;YACD,IAAI;gBACA,GAAG,CAAC,aAAa,EAAE,CAAC;aACvB;YAAC,WAAM,GAAE;QACd,CAAC,CAAC,EACF,+DAAQ,CAAC;YACL,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC7B,IAAI;gBACA,GAAG,CAAC,aAAa,EAAE,CAAC;aACvB;YAAC,WAAM,GAAE;QACd,CAAC,CAAC,CACD,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAEM,yBAAS,GAAhB;QACI,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;aAC/B;SACJ;IACL,CAAC;IAGD,+BAAe,GAAf,UAAgB,GAAuB;QAClC,IAAI,CAAC,QAA6B,CAAC,GAAG,GAAG,0BAA0B,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,GAAG,CAAC,aAAa,EAAE,CAAC;IACxB,CAAC;IAED,2BAAW,GAAX;QACI,6BAA6B;QAC7B,IAAK,IAAI,CAAC,UAAU,EAAG;YAAE,OAAO;SAAE;QAClC,IAAI,KAAa,CAAC;QAClB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAM,KAAK,GAAG,GAAG,GAAG,qDAAa,CAAC,aAAa,CAAC,CAAC;QACjD,IAAI;YACA,KAAK,GAAG,GAAG,GAAG,qDAAa,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACvD;QAAC,OAAO,GAAG,EAAE;YACV,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,GAAG,EAAE;gBAChC,KAAK,GAAG,QAAQ,CAAC;aACpB;YACD,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACpD;QACD,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,KAAK,EAAE;YACzB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,8CAA8C;SACjD;aAAM,IAAI,KAAK,EAAE;YACd,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,8CAA8C;SACjD;IACL,CAAC;IAEM,4BAAY,GAAnB;QACI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACvB,IAAI,CAAC,QAA6B,CAAC,GAAG,GAAG,sBAAsB,CAAC;IACrE,CAAC;IAEM,2BAAW,GAAlB;QACI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC5B,IAAI,CAAC,QAA6B,CAAC,GAAG,GAAG,sBAAsB,CAAC;IACrE,CAAC;IAEM,oBAAI,GAAX,UAAY,CAAa;QAErB,IAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC;QACrD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAErD,IAAI,CAAC,GAAG,GAAG,EAAE;YACT,CAAC,GAAG,GAAG,CAAC;SACX;aAAM,IAAI,CAAC,GAAG,CAAC,EAAE;YACd,CAAC,GAAG,CAAC,CAAC;SACT;QAED,IAAI,CAAC,GAAG,GAAG,EAAE;YACT,CAAC,GAAG,GAAG,CAAC;SACX;aAAM,IAAI,CAAC,GAAG,CAAC,EAAE;YACd,CAAC,GAAG,CAAC,CAAC;SACT;QAED,qBAAqB;QACrB,8GAA8G;QAE9G,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAE,CAAC,KAAE,CAAC,CAAC;SAC9B;IACL,CAAC;IACM,wBAAQ,GAAf,UAAgB,CAAY;QACxB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEjB,CAAC;IAED,6BAAa,GAAb,UAAc,CAAa;QACvB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;IACL,CAAC;IAED,uBAAO,GAAP,UAAQ,CAAY;QAChB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IA5LM,cAAQ,GAAG,KAAK,CAAC;IACjB,eAAS,GAAG,QAAQ,CAAC,aAAa,CAAU,WAAW,CAAC,CAAC;IA6LpE,YAAC;CAAA;AAzMiB;;;;;;;;;;;;;AClClB;AAAA;AAAA;IAII,iBAAY,UAAkB;QAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAEM,8BAAY,GAAnB,UAAoB,MAAc;QAC9B,IAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9D,IAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACzC;QACD,OAAO,KAAK,CAAC,MAAM,CAAC;IACpB,CAAC;IACT,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AClBmC;AACe;AAEnD,IAAY,YAIX;AAJD,WAAY,YAAY;IACpB,iCAAiB;IACjB,6BAAa;IACb,qCAAqB;AACzB,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;AAWD;IAA4B,wEAAO;IAQ/B,gBAAY,UAAkB;QAA9B,YACI,kBAAM,UAAU,CAAC,SAEpB;QADG,KAAI,CAAC,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;;IAChC,CAAC;IAEO,2BAAU,GAAlB;QACI,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAEO,gCAAe,GAAvB;QACI,IAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACpD,OAAO,CAAC,CAAC,aAAa,CAAC;IAC3B,CAAC;IAEO,yBAAQ,GAAhB;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACrC,OAAO,CAAC,CAAC,KAAK,CAAC;IACnB,CAAC;IAEO,6BAAY,GAApB;QACI,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC1C,OAAO,CAAC,CAAC,UAAU,CAAC;IACxB,CAAC;IAEO,2BAAU,GAAlB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACxC,OAAO,CAAC,CAAC,QAAQ,CAAC;IACtB,CAAC;IAEO,gCAAe,GAAvB;QACQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE;YAC5B,OAAO,YAAY,CAAC,IAAI,CAAC;SAC5B;aAAM,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE;YACnC,OAAO,YAAY,CAAC,QAAQ,CAAC;SAChC;aAAM;YACH,OAAO,YAAY,CAAC,MAAM,CAAC;SAC9B;IACT,CAAC;IAEO,uBAAM,GAAd,UAAe,SAA0B;QAErC,IAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC;QAErC,IAAI,SAAS,CAAC,UAAU,KAAK,CAAC,EAAE;YAC5B,MAAM,IAAI,+DAAiB,EAAE,CAAC;SACjC;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEnC,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,+DAAiB,EAAE,CAAC;SACjC;QAED,IAAI,CAAC,MAAM,GAAG;YACV,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE;YACpC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;YACzB,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE;YACjC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE;YACvC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE;YAC7B,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE;SAC7B,CAAC;IACN,CAAC;IACL,aAAC;AAAD,CAAC,CAvE2B,gDAAO,GAuElC;;;;;;;;;;;;;;;;;;ACzFD;IAAuC,mFAAK;IAIxC;QAAA,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;QAChC,KAAI,CAAC,OAAO,GAAG,8DAA8D,CAAC;QAC9E,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;;IAC7D,CAAC;IAEL,wBAAC;AAAD,CAAC,CAXsC,KAAK,GAW3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCSG;;;;;;;;;whCAAsD,4EAAG,2BAAnB,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,8NAAsD;yGACtD,qcAAuC,sLAAsB;yGAI7D;;;;;;;;;whCAAsD,oFAAW,2BAA3B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,8NAAsD;yGACtD,qcAAuC,kLAAkB;yGAKzD;;;;;;;;;whCAAsD,mFAAU,2BAA1B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,8NAAsD;yGACtD,qcAAuC,oLAAoB;yGAK3D;;;;;;;;;whCAAsD,uFAAc,2BAA9B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,8NAAsD;yGACtD,qcAAuC,yLAAyB;yGAKhE;;;;;;;;;whCAAsD,oFAAW,2BAA3B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,8NAAsD;0GACtD,qcAAuC,qLAAqB;0GAI5D;;;;;;;;;whCAAsD,uFAAc,2BAA9B,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,8NAAsD;0GACtD,qcAAuC,2LAA2B;0GAIlE;;;;;;;;;whCAAsD,kFAAS,2BAAzB,kBAAe,EAArD,YAAsD,EAAhB,SAAe,2BAArD,8NAAsD;0GACf,uHAAyC,kFAAK;0GAAM,uHAAyC,irBAAmC;0GAAvK,qcAAuC,iZAAyC,IAAW,6YAAyC,yBAAxF,wDAAkC,GAAvC,YAAyC,EAApC,SAAkC,GAAkB,wDAAkC,GAAvC,YAAyC,EAApC,SAAkC;0GAGpI,mvBAAuD;0GACvD,gOAIC,YADC;;wBAA+B;MAHjC,mjBAIC;4QA9DH,w1BAAa,MACT,mUAAiB,IACf,wHAAM,uFAAU,MAChB,+IAAyB,KACzB,k4FAAoC,MAElC;;;;;;;;wBAA0E;MAA1D;;wBAA6B;MAA7C,65BAA0E,KASlF,uJAA8B,KAC9B,y2DAAmD,KAGjD,s+BAAsC,KACpC,oiBAAsD,KACtD,khBAAuC,KAGzC,s+BAAkC,KAChC,oiBAAsD,KACtD,khBAAuC,KAIzC,s+BAAoC,KAClC,oiBAAsD,KACtD,khBAAuC,KAIzC,s+BAAyC,KACvC,oiBAAsD,KACtD,khBAAuC,KAIzC,s+BAAqC,KACnC,oiBAAsD,KACtD,mhBAAuC,KAGzC,w+BAA2C,KACzC,siBAAsD,KACtD,ohBAAuC,KAGzC,w+BAAwC,KACtC,siBAAsD,KACtD,ohBAAuC,KAGzC,6rBAAuD,KACvD,2qBAIC,KAGH,k2BAAmE,GAApD,yDAAqC,iDA3DE,yBAAoB,EAAlE,aAA0E,EAA5B,UAAoB,GAUzD,oBAAyB,aAA1C,aAAmD,EAAlC,UAAyB,GAA1C,aAAmD,GAGnC,2BAAuB,EAArC,aAAsC,EAAxB,UAAuB,GAKvB,uBAAmB,EAAjC,aAAkC,EAApB,UAAmB,GAMnB,yBAAqB,EAAnC,aAAoC,EAAtB,UAAqB,GAMrB,8BAA0B,EAAxC,aAAyC,EAA3B,UAA0B,GAM1B,0BAAsB,EAApC,aAAqC,EAAvB,UAAsB,GAKtB,gCAA4B,EAA1C,cAA2C,EAA7B,UAA4B,GAK5B,6BAAyB,EAAvC,cAAwC,EAA1B,UAAyB,GAKpB,oBAAmC,mBAAtD,cAAuD,EAApC,UAAmC,GAGpD,oBAA+C,mBAFjD,cAIC,EAFC,UAA+C,GAKE,qBAAa,EAAnD,gDAAqC,GAApD,cAAmE,EAAd,UAAa,EAAnD,UAAqC,2BAjEpD,8OAAa,GAIP,o5EAAoC,IAElC,u/BAA0E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEC;AAIhB;AAa3C;IAAA;QAUI,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;IAoEzH,CAAC;IA5DG,yCAAW,GAAX;QAAA,iBA4BC;QA3BG,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,gBAAM;YAExB,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,IAAI;gBACA,UAAU,GAAG,qDAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACjD;YAAC,OAAO,GAAG,EAAE;gBACV,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;aAClC;YAED,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACrB,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,WAAW,EAAE,MAAM,CAAC,WAAW;gBAC/B,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,aAAa,EAAE,MAAM,CAAC,aAAa;gBACnC,UAAU;aACb,CAAC,CAAC;YACH,CAAC,EAAE,CAAC;QACR,CAAC,CAAC,CAAC;QACH,6BAA6B;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAgB,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7E,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,uEAAc,CAAgB,IAAI,EAAE,EAAE,CAAC,CAAC;IACjE,CAAC;IACD,gFAAgF;IAChF,2CAAa,GAAb;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,OAAO,WAAW,KAAK,OAAO,CAAC;IACjC,CAAC;IAED,gFAAgF;IAChF,0CAAY,GAAZ;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACtE,CAAC;IAED,mDAAmD;IACnD,2CAAa,GAAb,UAAc,GAAmB;QAC/B,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,UAAM,CAAC;SAC9D;QACD,OAAO,CAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,eAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAE,CAAC;IAC7F,CAAC;IAED,yCAAW,GAAX,UAAY,KAAY;QACpB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACL,CAAC;IAEL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC7FiC;AAE+B;;;;;AAiEjE;IAKI,mBAAmB;IACnB,oBAAmB,IAAgB,EAAS,UAAsB,EAAU,MAAc;QAAvE,SAAI,GAAJ,IAAI,CAAY;QAAS,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE9F,8BAAS,GAAT;QAAA,iBAcC;QAbG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,+CAAU,CACjB,oBAAU;YACN,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAC,CAAC,EAAE,IAAa;gBACnD,KAAI,CAAC,MAAM,GAAG,2DAAI,IAAI,CAAC,CAAC;gBACxB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,UAAU,CAAC,QAAQ,EAAE,CAAC;YAE1B,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChD,CAAC,CACJ,CAAC;IACN,CAAC;IAED,0BAAK,GAAL;QAAA,iBAeK;QAdD,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CACxB,gEAAS,CAAC,gBAAM;YACZ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,KAAI,CAAC,IAAI,CAAC,IAAI;YACjB,4CAA4C;YAC5C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAC7H,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CACxF,0DAAG,CAAC,eAAK;gBACL,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAClC,CAAC,CAAC,CACL,CAAC;QACV,CAAC,CAAC,CACL,CAAC;IACF,CAAC;IAIL,sBAAI,8BAAM;aAIV;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7D,CAAC;aAND,UAAW,MAAe;YACtB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,CAAC;;;OAAA;IAMD,iCAAY,GAAZ;QACI,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IACD,gCAAW,GAAX;QACI,OAAO,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IACD,gCAAW,GAAX,UAAY,KAAoB;QAC5B,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IAElD,CAAC;IACD,8BAAS,GAAT;QACI,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAE1C,CAAC;IAED,sBAAI,kCAAU;aAAd;YACI,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACrC,OAAO,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/C,CAAC;;;OAAA;IAED,kCAAa,GAAb;QACI,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG;QAChB,2DAA2D;QAC3D,4DAA4D;QAC5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,uCAAuC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAClH;YACE,OAAO,EAAE;gBACL,aAAa,EAAE,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE;aAChD;SACJ,CAAC,CAAC;IACX,CAAC;;qBAzJL;CAsKC;AA5FsB;;;;;;;;;;;;;ACzEvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0F;AAC9B;AAGV;AACa;AAG/D,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC;KACvE;IACD;QACI,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sGAAyB;KACjE;IACD;QACI,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB;KAC/C;IACD;QACI,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM;KACrD;CACJ,CAAC;AAEF;IAAA;IAIgC,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGC5BjC,8lBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf;AAAA;AAAA;IAAA;IAOA,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6BD;AAAA;AAAA;IAAA;IAgDyB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGC7DlB,6dAAsC,6NAAyB;uGAE3D,uHAA+B,4bAE/B;uGAEA,uHAA2D,yNAAqB;uGAEhF,wHAAiC,KAC7B,ySAAsG,YAA5C;;wBAA2C;MAArG,+mDAAsG,4EAAmC,MACzI,ySAA6G,YAA5C;;wBAA2C;MAA5G,+mDAA6G,4EAA0C,MACvJ,ySAAuG,YAA5C;;wBAA2C;MAAtG,inDAAuG,6EAAoC,MAC3I,0SAAqG,YAA5C;;wBAA2C;MAApG,inDAAqG,6EAAkC,MACvI,0SAAwG,YAA5C;;wBAA2C;MAAvG,inDAAwG,6EAAqC,2BAJ7I,YAAsG,GAA5F,oDAA+C,kBAAzD,YAAsG,EAA5F,SAA+C,GACzD,YAA6G,GAAnG,oDAAsD,yBAAhE,YAA6G,EAAnG,SAAsD,GAChE,aAAuG,GAA7F,qDAAgD,mBAA1D,aAAuG,EAA7F,UAAgD,GAC1D,aAAqG,GAA3F,qDAA8C,iBAAxD,aAAqG,EAA3F,UAA8C,GACxD,aAAwG,GAA9F,qDAAiD,oBAA3D,aAAwG,EAA9F,UAAiD,2BAJ3D,2XAAsG,6FAAmC,GACzI,2XAA6G,oGAA0C,GACvJ,+XAAuG,iGAAoC,GAC3I,oYAAqG,+FAAkC,GACvI,oYAAwG,kGAAqC;uGAZrJ,qcAAuC,IACnC,2YAA+B,IAI/B,2YAA2D,IAE3D,2YAAiC,yBAN5B,uDAAyB,GAA9B,YAA+B,EAA1B,SAAyB,GAIzB,sGAAqD,IAA1D,YAA2D,EAAtD,SAAqD,GAErD,yDAA2B,GAAhC,YAAiC,EAA5B,SAA2B;uGAZxC,o+BAGC,KACG,iiBAAsC,KACtC,ghBAAuC,0BAJvC,gHAA2B,GAD/B,YAGC,EAFG,SAA2B;uGAwB3B,odAIC,IACG,gLAKC,KACG,uHAAK,sMAA6B,uDARtC,mBAAwC,0BAH5C,YAIC,EADG,SAAwC,GAIpC,yFAEC,GAJL,YAKC,EAHG,SAEC,GAEI,yMAA6B;uGAK9C,qvBAAuD;uGACvD,mRAOK,YAFD;;wBAAwE;MACxE;;wBAAoC;MANxC,qjBAOK,uDAHD,2CAA0D,qBAJ9D,YAOK,EAHD,SAA0D;wGAI9D,4tBAIC;wGAED,0IAAkC,KAC9B,6JAAiC,iQAA6C;ubAjFtF,w1BAAa,MACT,mUAAiB,IACf,wHAAM,uFAAU,MAChB,gJAAyB,KAEzB,i4FAAoC,MAElC;;;;;;;;wBAA0E;MAA1D;;wBAA6B;MAA7C,45BAA0E,KAE5E,kXAAoJ,YAA1D;;wBAA6B;MAAvH,wlDAAoJ,IAClJ,k4BAA+C,+EAAM,MAQ7D,sJAA8B,KAC9B,swDAIC,MACG,qdAGC,IAqBD,q+BAA4C,KACxC,ghBAIC,KAYL,yrBAAuD,KACvD,uqBAOK,KACL,2dAIC,GAFG,wDAAiD,GAFrD,0MAIC,KAED,4GAAkC,KAKtC,k4BAAqE,GAAtD,wDAAgC,iDA9EO,yBAAoB,EAAlE,aAA0E,EAA5B,UAAoB,GAEoD,qBAA2B,cAAnJ,aAAoJ,EAA5B,UAA2B,GAA1H,qCAA+B,EAAxD,aAAoJ,EAA3H,UAA+B,GACtD,aAA+C,GAWnD,oBAAyB,aACzB,mBAAqB,EAHzB,aAIC,EAFG,UAAyB,EACzB,UAAqB,GAIjB,oBAAuC,mBAF3C,aAGC,EADG,UAAuC,GAsB7B,iCAA6B,EAA3C,aAA4C,EAA9B,UAA6B,GAiBxB,oBAAmC,mBAAtD,aAAuD,EAApC,UAAmC,GAGlD,oBAAmD,mBAFvD,aAOK,EALD,UAAmD,GAQnD,gDAAiD,GAFrD,aAIC,EAFG,UAAiD,GAS1C,0CAAgC,GAAC,mBAAoB,EAApE,aAAqE,EAAtD,UAAgC,EAAC,UAAoB,2BArFpE,8OAAa,GAKP,o5EAAoC,IAElC,u/BAA0E,GAE5E,wPAAoJ,GAClJ,oYAA+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVN;AACY;AACJ;AAOI;AAC3B;AAIlC;IAgBI,2BAAoB,GAAe,EAAU,GAAsB;QAA/C,QAAG,GAAH,GAAG,CAAY;QAAU,QAAG,GAAH,GAAG,CAAmB;QAEnE,SAAI,GAAgB,EAAE,CAAC;QAMvB,eAAU,GAAG,IAAI,0EAAkB,EAAa,CAAC;QACjD,gCAAgC;QAChC,qBAAgB,GAAG,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC9D,gBAAW,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC;IAX1B,CAAC;IAcxE,oCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,2CAAe,GAAf,cAAyB,CAAC;IAE1B,mCAAO,GAAP,UAAQ,CAAC,EAAE,OAAO;QACd,IAAM,GAAG,GAAc,OAAO,CAAC;QAE/B,IAAM,MAAM,8DAAkB,GAAG,CAAC,CAAC;QACnC,OAAO,MAAM,CAAC,GAAG,CAAC;QAClB,OAAO,MAAM,CAAC,IAAI,CAAC;QAEnB,IAAI,MAAM,GAAW,IAAI,CAAC;QAE1B,IAAI;YACA,IAAM,KAAK,GAAG,IAAI,8DAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAExC,IAAM,UAAU,GAAe,EAAC,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;YAEvD,UAAU,CAAC,OAAO,GAAG,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3D,IAAI,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK,0EAAY,CAAC,MAAM,EAAE;gBACnD,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC;aAC7B;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK,0EAAY,CAAC,QAAQ,EAAE;gBAC5D,UAAU,CAAC,IAAI,GAAG,YAAY,CAAC;aAClC;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK,0EAAY,CAAC,IAAI,EAAE;gBACxD,UAAU,CAAC,IAAI,GAAG,WAAW,CAAC;aACjC;iBAAM;gBACH,UAAU,CAAC,OAAO,GAAG,sBAAsB,CAAC;gBAC5C,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC;aAC7B;YAED,MAAM,GAAG;gBACL,4CAA4C;gBAC5C,OAAO,EAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,eAAe,EAAC,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAC;gBAC9H,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAC;gBAC3G,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAC;gBAC1H,4CAA4C;gBAC5C,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,gBAAgB,EAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAC;aAC5I,CAAC;SAEL;QAAC,OAAO,CAAC,EAAE;YAER,IAAI,CAAC,CAAC,YAAY,sEAAY,CAAC,IAAI,CAAC,CAAC,YAAY,SAAS,CAAC,EAAE;gBACzD,MAAM,GAAG;oBACL,OAAO,EAAG,EAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAC;oBACpD,MAAM,EAAE,EAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAC;oBAClD,KAAK,EAAE,EAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAC;oBACjD,QAAQ,EAAE,EAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAC;oBACpD,aAAa,EAAE,EAAC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,cAAc,EAAC;iBAC5D,CAAC;aACL;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;SAEJ;QACD,IAAM,GAAG,GAAc;YACnB,UAAU,EAAE,GAAG,CAAC,UAAU;YAC1B,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,MAAM;YACN,QAAQ,EAAE,MAAM;SACnB,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAf,CAAe,CAAC,CAAC;QAEtD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC5B,CAAC;IAED,uCAAW,GAAX;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,8CAAkB,GAAlB,UAAmB,KAAK;QACpB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,gDAAgD;IACpD,CAAC;IAEK,4CAAgB,GAAtB;;;;;4BACmD,qBAAM,+CAAM,CAAC,MAAM,CAAC,cAAc,CAAC;4BAC9E,KAAK,EAAE,gBAAgB;4BACvB,IAAI,EAAE,SAAS;4BACf,OAAO,EAAE,8DAA8D;4BACvE,OAAO,EAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;4BACjC,QAAQ,EAAE,CAAC;4BACX,SAAS,EAAE,CAAC;yBACf,CAAC;;wBAPI,MAAM,GAAmC,SAO7C;wBAEF,IAAI,MAAM,CAAC,QAAQ,KAAK,CAAC,EAAE;4BACvB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;4BACf,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;4BAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;yBACzC;;;;;KACJ;IAED,uCAAW,GAAX,UAAY,KAAY;QACpB,IAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACL,CAAC;IAED,+CAAmB,GAAnB,UAAoB,KAAK;QACrB,4BAA4B;IAChC,CAAC;IACL,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;AC7JsC;;AAGvC;IAQI;QAJQ,SAAI,GAA4B,KAAK,CAAC,CAAC;QAExC,uBAAkB,GAAI,IAAI,oDAAe,CAAc,IAAI,CAAC,CAAE;QAGjE,IAAI,MAAM,CAAC,OAAO,EAAE;YAChB,IAAI;gBACA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC;aACtD;YAAC,OAAO,CAAC,EAAE;gBACR,MAAM,CAAC,CAAC;aACX;SACJ;aAAM;YACH,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;SAClD;IACL,CAAC;IAEM,uBAAE,GAAT,UAAU,OAAe,EAAE,QAAoE;QAC3F,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IACM,yBAAI,GAAX,UAAY,OAAe,EAAE,QAAoE;QAC7F,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC;IACM,yBAAI,GAAX,UAAY,OAAe;;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO;SACV;QACD,UAAI,CAAC,IAAI,EAAC,IAAI,mEAAC,OAAO,GAAK,IAAI,GAAE;IACrC,CAAC;IAEM,6BAAQ,GAAf,UAAgB,OAAe;;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO;SACV;QACD,OAAO,UAAI,CAAC,IAAI,EAAC,QAAQ,mEAAC,OAAO,GAAK,IAAI,GAAE;IAChD,CAAC;IAEM,wBAAG,GAAV,UAAW,KAAsB,EAAE,QAAkC;QACjE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,OAAO;SACV;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1C,CAAC;;qBAvDL;CAwDC;AAjDsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sGCPvB,6IAAwB,KACpB,wlCAA0B,yBAAb,sBAAY,EAAzB,YAA0B,EAAb,SAAY,2BAAzB,gTAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACI9B;IASI,0BAAoB,GAAe,EAAU,MAAc,EAAU,EAAU;QAA3D,QAAG,GAAH,GAAG,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,OAAE,GAAF,EAAE,CAAQ;QAC3E,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAaC;QAZG,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,SAAS,CAAE;YACxB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,KAAI,CAAC,EAAE,CAAC,GAAG,CAAC,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;QACxD,CAAC,EACD,UAAM,GAAG;;;;;6BACD,IAAG,CAAC,MAAM,KAAK,GAAG,GAAlB,wBAAkB;wBAClB,qBAAM,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC;;4CAAW,qBAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;4CAAjD,+BAAiD;;qCAAA,CAAC;;wBAA/E,SAA+E,CAAC;wBAChF,sBAAM;4BAEV,qBAAM,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC;;wCAAW,qBAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;wCAAjD,+BAAiD;;iCAAA,CAAC;;wBAA/E,SAA+E,CAAC;;;;aACnF,CAAC,CAAC;IACP,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+GChCD,8IAAuB,KACnB,oJAA6B,KACzB,+nBAAU,IACN,4gCAAyB,KACrB,ywBAA2B,IACvB,4KAAoD,KAExD,2wBAA2B,IACvB,wgBAAiB,IACb,yTAAgB,gFAAS,MACzB,kUAAmB,kFAEnB,2BATG,mBAAQ,EAAvB,YAAyB,EAAV,SAAQ,GACJ,mBAAW,EAA1B,YAA2B,EAAZ,SAAW,GAGX,mBAAW,EAA1B,aAA2B,EAAZ,SAAW,mDALlC,wIAAU,GACN,uGAAyB,GACrB,wMAA2B,GAG3B,2MAA2B,GAEH,mDAAS,GACN,mDAEnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;AAAA;IAOE,mCAAoB,eAA+B,EAAU,KAAwB;QAAjE,oBAAe,GAAf,eAAe,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAmB;QAErF,SAAI,GAAG,EAAE,CAAC;QACV,QAAG,GAAC,EAAE,CAAC;QACP,UAAK,GAAG,EAAE,CAAC;IAJ8E,CAAC;IAM1F,4CAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAE,gBAAM;YACzC,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAG,KAAI,CAAC,IAAI,KAAK,KAAK,EAAE;gBACpB,KAAI,CAAC,KAAK,GAAG,mBAAmB,CAAC;gBACjC,KAAI,CAAC,GAAG,GAAG,0IAA0I,CAAC;aACzJ;iBACI,IAAI,KAAI,CAAC,IAAI,KAAK,KAAK,EAAC;gBACzB,KAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;gBAC9B,KAAI,CAAC,GAAG,GAAG,mGAAmG,CAAC;aAClH;iBACI;gBACD,KAAI,CAAC,KAAK,GAAG,eAAe,CAAC;gBAC7B,KAAI,CAAC,GAAG,GAAG,8BAA8B,CAAC;aAC7C;YACD,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,EACD,aAAG,IAAK,CAAC,EACT;QAEA,CAAC,CAAC;IAEJ,CAAC;IAEH,gCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGCiEe,uPASC,EAHG;;wBAAkC;MAClC;;wBAAyC;MAP7C,g1CASC,yGANG,kBAAuB,0BAH3B,YASC,EANG,SAAuB,GAKvB,4HAAoC,GARxC,YASC,EADG,SAAoC,mDAJpC,kBAAsC,uCACtC,mBAAyB,cAL7B,YASC,EALG,SAAsC,EACtC,SAAyB;qGA9G7C,sxCAAoD,KAChD,u0BAAyB,MACrB,+3BAA+B,MAC3B,qUAAiB,IACb,wJAAgC,KAC5B,8XAKC,YAFG;;wBAA8B;MAHlC,2jDAKC,IACG,i2BAAU,oFAAW,MAGzB,sXAKC,YAFG;;wBAAyB;MAH7B,2jDAKC,IACG,i2BAAU,6EAAI,MAGlB,8VAKC,YAFG;;wBAAyB;MAH7B,2jDAKC,IACG,i2BAAU,6EAER,MAGN;;;;;;;;;;;;;;;;;wBASC;MAHG;;wBAAqB;MAErB;;wBAAiC;MARrC,4rEASC,MAGD,gYAMC,YAHG;;wBAAwB;MAH5B,olDAMC,IACG,i2BAAU,gGAAuB,MAGrC,6XAMC,YAHG;;wBAA0B;MAH9B,olDAMC,IACG,i2BAAU,uFAAc,MAG5B,iYAKC,YAFG;;wBAAwB;MAH5B,2jDAKC,IACG,i2BAAU,mFAAU,MAI5B,mJAA4B,KAC5B,4XAKC,YAFG;;wBAAwB;MAH5B,2jDAKC,IACG,i2BAAU,mFAAU,MAahC,2IAAuB,KACnB,iKAAoC,KAChC,yOAKE,KAEF,kdASC,IAQb,40BAA4B,MACxB,2IAAuB,KACnB,mhBAAgC,IAGxC,40BAA4B,MACxB,2IAAuB,KACnB,smBAAc,iDAjIa,sBAAY,EAApC,qBAAuB,EAAtC,YAAoD,EAAb,SAAY,EAApC,SAAuB,GACzB,wBAAc,EAAvB,YAAyB,EAAhB,SAAc,GACN,2BAAiB,EAA9B,YAA+B,EAAlB,SAAiB,GAOd,+BAAyB,EAJ7B,aAKC,EADG,UAAyB,GAEzB,aAAU,GAOV,uBAAiB,EAJrB,aAKC,EADG,UAAiB,GAEjB,aAAU,GAOV,sIAAsD,GAJ1D,aAKC,EADG,UAAsD,GAEtD,aAAU,GAYV,6BAAuB,EAP3B,aASC,EAFG,UAAuB,GAFvB,qBAAyB,cAHzB,oBAAO,EACP,oBAAO,EACP,qBAAS,EAET,oBAAqB,YANzB,aASC,EAJG,UAAyB,EAHzB,UAAO,EACP,UAAO,EACP,UAAS,EAET,UAAqB,GAUrB,qBAAyB,cAJ7B,aAMC,EAFG,UAAyB,GACzB,iCAA2B,EAL/B,aAMC,EADG,UAA2B,GAE3B,aAAU,GAQV,2CAA0C,eAL9C,aAMC,EADG,UAA0C,GAD1C,8BAAwB,EAJ5B,aAMC,EAFG,UAAwB,GAGxB,aAAU,GAOV,kCAA4B,EAJhC,aAKC,EADG,UAA4B,GAE5B,aAAU,GASd,6BAAuB,EAJ3B,aAKC,EADG,UAAuB,GAEvB,aAAU,GAuBV,oBAA4B,SADhC,aASC,EARG,UAA4B,GAgBnC,6BAAkB,EAA3B,aAA4B,EAAnB,UAAkB,GAEH,oBAAe,MAA/B,aAAgC,EAAhB,UAAe,GAG9B,6BAAkB,EAA3B,aAA4B,EAAnB,UAAkB,GAEnB,aAAc,mDAjI1B,mOAAoD,GAE5C,8OAA+B,GAGnB,oPAKC,GACG,oYAAU,GAGd,wPAKC,GACG,oYAAU,GAGd,wPAKC,GACG,oYAAU,uFAER,GAGN,i8DASC,IAGD,wPAMC,GACG,oYAAU,GAGd,wPAMC,GACG,oYAAU,GAGd,wPAKC,GACG,oYAAU,GAKlB,wPAKC,GACG,oYAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFkB;AAKF;AACQ;AAGpB;AAC4C;AACL;AAEzE;IAOI,yBAAmB,GAAe,EAAS,GAAe,EAAU,GAAsB;QAAvE,QAAG,GAAH,GAAG,CAAY;QAAS,QAAG,GAAH,GAAG,CAAY;QAAU,QAAG,GAAH,GAAG,CAAmB;QAK1F,kBAAa,GAAG,KAAK,CAAC;QAGf,WAAM,GAAY,EAAE,CAAC;QAC5B,cAAS,GAAG,CAAC,CAAC;QACd,gBAAW,GAAG,KAAK,CAAC;QAIpB,QAAG,GAAa,EAAE,CAAC;IAd2E,CAAC;IAgBvF,0CAAgB,GAAxB,UAAyB,CAAC,EAAE,OAAO;QAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YACrB,KAAK,CAAC,SAAS,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,4CAAkB,GAA1B,UAA2B,CAAC,EAAE,OAAO;QACjC,IAAM,GAAG,GAAgB,OAAO,CAAC;QACjC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAI;YAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,IAAI;YACA,IAAM,KAAK,GAAG,IAAI,2EAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAEnC,IAAI,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK,iFAAY,CAAC,IAAI,EAAE;gBACjD,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aACvC;YAED,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,IAAI,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK,iFAAY,CAAC,MAAM,EAAE;gBACpF,KAAK,CAAC,SAAS,EAAE,CAAC;gBAClB,KAAK,CAAC,WAAW,EAAE,CAAC;aACvB;YAED,IAAI,KAAK,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK,iFAAY,CAAC,MAAM,CAAC,EAAE;gBACrF,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aAC9B;YAED,IAAI,KAAK,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,KAAK,iFAAY,CAAC,QAAQ,CAAC,EAAE;gBACvF,KAAK,CAAC,SAAS,EAAE,CAAC;aACrB;YAED,IAAI,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE;gBAC3B,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnC;YAED,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvB,KAAK,CAAC,YAAY,EAAE,CAAC;aACxB;YAED,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE;gBACzB,KAAK,CAAC,YAAY,EAAE,CAAC;aACxB;SACJ;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,CAAC,CAAC,YAAY,oFAAiB,CAAC,EAAE;gBACnC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;SACJ;IACL,CAAC;IAED,sCAAY,GAAZ;QACI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK;YACtB,IAAI,KAAK,CAAC,UAAU,EAAE;gBAClB,KAAK,CAAC,SAAS,EAAE,CAAC;aACrB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACK,yCAAe,GAArB;;;;gBACI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAU,WAAW,CAAC,CAAC;gBAC9D,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAqB,CAAC;gBAEzE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE7D,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAE5D,CAAC,GAAG,CAAC,CAAC;gBACV,OAAO,IAAI,EAAE;oBACT,IAAI;wBACM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACvC,IAAI,GAAG,KAAK,IAAI,EAAE;4BAAE,MAAM;yBAAE;wBAC5B,IAAI,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;4BAC1B,GAAG,GAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;4BAChE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,yDAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;yBACzD;wBACD,CAAC,EAAE,CAAC;qBACP;oBAAC,OAAO,KAAK,EAAE;wBACZ,MAAM;qBACT;iBACJ;gBAEK,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBACzD,IAAI,CAAC,CAAC,IAAI,EAAE;oBACR,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;iBACzB;qBAAM;oBACH,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAA6B,CAAC;iBAClD;gBAED,IAAI,CAAC,qBAAqB,GAAG,sDAAS,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,CAAC,cAAc,EAAE,EAAlB,CAAkB,CAAC,CAAC;;;;KACzG;IAED,qCAAW,GAAX;QACI,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrE,CAAC;IAEK,kCAAQ,GAAd;;;;;gBAEI,yDAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;gBAEnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAEpB,QAAQ,GAAG,kDAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,CACjC,gEAAS,CAAC;oBACN,OAAO,KAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;gBACpC,CAAC,CAAC,EACF,0DAAG,CAAC,UAAC,OAAO;oBACR,6BAA6B;oBAC7B,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE;wBAClB,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;qBAC7B;yBAAM,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE;wBAC1B,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;qBAC9B;yBAAM;wBACH,+CAAM,CAAC,MAAM,CAAC,YAAY,CAAC,oBAAoB,EAAE,qDAAqD,CAAC,CAAC;qBAC3G;oBACD,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,gBAAM;wBACnB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;4BACrB,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;gCACvC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gCACtB,KAAK,CAAC,WAAW,EAAE,CAAC;6BACvB;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CACL,CAAC;gBAEF,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC;oBAC9B,QAAQ,EAAE;wBACN,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;oBAC7C,CAAC;iBACJ,CAAC,CAAC;;;;KAKN;IAGD,0CAAgB,GAAhB;QAAA,iBAqCC;QApCG,OAAO,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,OAAO;YAC7C,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE;gBAClB,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;aAC7B;iBAAM,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE;gBAC1B,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;aAC9B;iBAAM;gBACH,+CAAM,CAAC,MAAM,CAAC,YAAY,CAAC,oBAAoB,EAAE,qDAAqD,CAAC,CAAC;aAC3G;QAEL,CAAC,EACG,aAAG,IAAM,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,EACtC;YACI,IAAM,MAAM,GAAG,CAAC,CAAC;YACjB,IAAM,MAAM,GAAG,CAAC,CAAC;YACjB,IAAM,MAAM,GAAG,CAAC,CAAC;YACjB,IAAM,WAAW,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,GAAG,MAAM,CAAC;YACf,IAAI,CAAC,GAAG,MAAM,CAAC;YACf,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAC,MAAc;gBAC5B,IAAM,KAAK,GAAG,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAC9C,IAAI,CAAC,CAAC,KAAK,EAAE;oBACT,IAAM,QAAQ,GAAG,IAAI,yDAAK,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACzD,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC7B,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBAC3B;qBAAM;oBACH,IAAM,QAAQ,GAAG,IAAI,yDAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAE,CAAC,KAAE,CAAC,CAAC;oBAC7C,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBACxB,CAAC,IAAI,MAAM,CAAC;oBACZ,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE;wBAChC,CAAC,GAAG,MAAM,CAAC;wBACX,CAAC,IAAI,MAAM,CAAC;qBACf;iBACJ;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IACD,kCAAQ,GAAR,UAAS,KAAY;QACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;IAChC,CAAC;IAED,uCAAa,GAAb;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,yDAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACvC,CAAC;IAED,uCAAa,GAAb;QACI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YACrB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YAClB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC/D;QAED,+CAAM,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,4CAAkB,GAAlB,UAAmB,MAAc;QAC7B,IAAI;YACA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;SACjE;QAAC,WAAM;YACJ,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAED,sCAAY,GAAZ;QAAA,iBAcC;QAbG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YACrB,IAAM,MAAM,GAAkB,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACpE,IAAI,CAAC,MAAM,EAAE;gBAAE,OAAO;aAAE;YACxB,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,CAAC,IAAI,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,6BAA6B,CAAC;SAClD;IACL,CAAC;IAED,wCAAc,GAAd;QAAA,iBA+BC;QA9BG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,OAAO;YACvC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE;gBAClB,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;aAC7B;iBAAM,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE;gBAC1B,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;aAC9B;QACL,CAAC,EACG,aAAG,IAAM,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,EACtC;YACI,IAAM,MAAM,GAAG,CAAC,CAAC;YACjB,IAAM,MAAM,GAAG,CAAC,CAAC;YACjB,IAAM,MAAM,GAAG,CAAC,CAAC;YACjB,IAAM,WAAW,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,GAAG,MAAM,CAAC;YACf,IAAI,CAAC,GAAG,MAAM,CAAC;YACf,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAC,MAAc;gBAE5B,IAAM,QAAQ,GAAG,IAAI,yDAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAE,CAAC,KAAE,CAAC,CAAC;gBAC7C,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACxB,CAAC,IAAI,MAAM,CAAC;gBACZ,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE;oBAChC,CAAC,GAAG,MAAM,CAAC;oBACX,CAAC,IAAI,MAAM,CAAC;iBACf;YACL,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,yCAAe,GAAf,UAAgB,CAAkB;QAC9B,wBAAwB;QACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YACrB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,sCAAY,GAAZ;QACI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,yDAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;IACvC,CAAC;IAEK,4CAAkB,GAAxB;;;;;4BACiB,qBAAM,+CAAM,CAAC,MAAM,CAAC,cAAc,CAC3C;4BACI,KAAK,EAAE,oBAAoB;4BAC3B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC;yBACpE,CACJ;;wBALK,IAAI,GAAG,SAKZ;wBAED,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;4BACrB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;4BACnC,yBAAyB;yBAC5B;;;;;KACJ;IAED,sCAAY,GAAZ,UAAa,CAAS;QAClB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,uCAAa,GAAb;QACI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAED,oCAAU,GAAV;QACI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,uCAAa,GAAb;QACI,6BAA6B;QAC7B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,oCAAU,GAAV;QACI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;AClVD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,qC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { tap } from 'rxjs/operators';\r\nimport { ApiService } from './../api/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot,\r\nUrlTree, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    public authService: ApiService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (!this.authService.isLoggedIn) {\r\n      this.router.navigate(['restricted']);\r\n    }\r\n    return this.authService.isLoggedIn;\r\n  }\r\n}\r\n","import { ApiService } from './../api/api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\r\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    private refreshTokenInProgress = false;\r\n    // Refresh Token Subject tracks the current token, or is null if no token is currently\r\n    // available (e.g. refresh pending).\r\n    private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\r\n        null\r\n    );\r\n    constructor(public auth: ApiService) {}\r\n\r\n    intercept(\r\n        request: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(request)\r\n        .pipe(\r\n            catchError(error => {\r\n            // console.log(error.status);\r\n\r\n            if (request.url.includes('login')) {\r\n                return throwError(error);\r\n            }\r\n\r\n            if (error.status !== 401) {\r\n                return throwError(error);\r\n            }\r\n\r\n            return this.auth.login().pipe(\r\n                switchMap(() => {\r\n                    return next.handle(this.addAuthenticationToken(request));\r\n                }),\r\n                catchError( err => {\r\n                    return throwError(err);\r\n                })\r\n            );\r\n        }));\r\n    }\r\n\r\n    addAuthenticationToken(request) {\r\n        // Get access token from Local Storage\r\n        const accessToken = this.auth.getJWTToken();\r\n\r\n        // If access token is null this means that user is not logged in\r\n        // And we return the original request\r\n        if (!accessToken) {\r\n            return request;\r\n        }\r\n\r\n        // We clone the request, because the original request is immutable\r\n        return request.clone({\r\n            setHeaders: {\r\n                Authorization: this.auth.getJWTToken()\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\nimport { Device } from '../api/api.service';\nimport { interval, Subscription, timer } from 'rxjs';\nimport { map, finalize } from 'rxjs/operators';\nimport * as timeago from 'timeago-reverse';\n\ninterface Point {\n    x: number;\n    y: number;\n}\n\nexport interface AlarmAsObject {\n    color: string;\n    device: Device;\n    alarmDOM: Element;\n    position: Point;\n    size: number;\n    style: Style;\n}\n\ninterface Style {\n    backgroundColor?: string;\n    backgroundImage?: string;\n    'width.px'?: number;\n    'height.px'?: number;\n    'width.em'?: number;\n    'height.em'?: number;\n    'top.px'?: number;\n    'left.px'?: number;\n    'top.%'?: number;\n    'left.%'?: number;\n}\n\n\nexport class Alarm {\n\n\n    constructor(public device: Device, public position: Point) {\n\n        Alarm.container = document.querySelector<Element>('#boundary');\n        this.initializeAlarmDOM();\n        this.setPosition(position);\n\n    }\n\n    static isLocked = false;\n    static container = document.querySelector<Element>('#boundary');\n\n    color: string;\n    alarmDOM: HTMLImageElement;\n    style: Style = {};\n    size: number;\n    private blinkSub: Subscription;\n    private blinkForSub: Subscription;\n    private blinkState = false;\n\n    public initializeAlarmDOM() {\n        this.alarmDOM = document.createElement('img');\n        this.alarmDOM.src = './assets/sd_icon.png';\n        this.alarmDOM.className = 'alarm-img';\n        this.setColor('greenyellow');\n        this.setSize(2);\n    }\n\n    get isBlinking() {\n        return this.blinkState;\n    }\n\n    get asJSON(): AlarmAsObject {\n        return {\n            color: this.color,\n            device: this.device,\n            alarmDOM: this.alarmDOM,\n            position: this.position,\n            size: this.size,\n            style: this.style,\n        };\n    }\n\n    get asJSONString(): string {\n        return JSON.stringify(this.asJSON);\n    }\n\n    setPosition(position: Point) {\n        this.style['top.%'] = position.y;\n        this.style['left.%'] = position.x;\n        this.position = position;\n    }\n\n    setColor(color: string) {\n        this.style.backgroundColor = color;\n        this.color = color;\n    }\n\n    setSize(size: number) {\n        this.style['width.em'] = size;\n        this.style['height.em'] = size;\n        this.size = size;\n    }\n\n\n    public dragOver(e: DragEvent) {\n        e.preventDefault();\n        this.move(e);\n        // console.log('[OVER]');\n    }\n\n    public blinkFor(duration: number, blinkInterval?: number, ref?: ChangeDetectorRef) {\n        if (!!this.blinkForSub) {\n            if (!this.blinkForSub.closed) {\n                this.blinkForSub.unsubscribe();\n            }\n        }\n        this.blinkStop();\n        this.blink(blinkInterval, ref);\n        this.blinkForSub = timer(duration).pipe(map( () => {\n            this.blinkStop();\n        })\n        ).subscribe();\n    }\n\n    public blink(blinkInterval?: number, ref?: ChangeDetectorRef) {\n        if (this.isBlinking) { return; }\n        this.blinkState = true;\n        (this.alarmDOM as HTMLImageElement).src = './assets/sd_icon.png';\n        this.blinkSub = interval(blinkInterval || 1000).pipe(map( num => {\n            if ( num % 2 === 0) {\n                this.setColor('red');\n            } else {\n                this.setColor('white');\n            }\n            try {\n                ref.detectChanges();\n            } catch {}\n        }),\n        finalize(() => {\n            this.blinkState = false;\n            this.setColor('greenyellow');\n            try {\n                ref.detectChanges();\n            } catch {}\n        })\n        ).subscribe();\n    }\n\n    public blinkStop() {\n        if (!!this.blinkSub) {\n            if (!this.blinkSub.closed) {\n                this.blinkSub.unsubscribe();\n            }\n        }\n    }\n\n\n    lowBatteryAlert(ref?: ChangeDetectorRef) {\n        (this.alarmDOM as HTMLImageElement).src = './assets/low_battery.png';\n        this.setColor('red');\n        ref.detectChanges();\n    }\n\n    updateState() {\n        // this.initializeAlarmDOM();\n        if ( this.isBlinking ) { return; }\n        let delta: number;\n        const now = Date.now();\n        const limit = now - timeago.parse('8 hours ago');\n        try {\n            delta = now - timeago.parse(this.device.lastSeenAt);\n        } catch (err) {\n            if (this.device.lastSeenAt === '-') {\n                delta = Infinity;\n            }\n            delta = now - Date.parse(this.device.lastSeenAt);\n        }\n        if (!delta || delta > limit) {\n            this.warningState();\n            // console.log(this.device.lastSeenAt, delta);\n        } else if (delta) {\n            this.normalState();\n            // console.log(this.device.lastSeenAt, delta);\n        }\n    }\n\n    public warningState() {\n        this.setColor('yellow');\n        (this.alarmDOM as HTMLImageElement).src = './assets/warning.png';\n    }\n\n    public normalState() {\n        this.setColor('greenyellow');\n        (this.alarmDOM as HTMLImageElement).src = './assets/sd_icon.png';\n    }\n\n    public move(e: MouseEvent) {\n\n        const rect = Alarm.container.getBoundingClientRect();\n        let x = 100 * ((e.clientX - rect.left) / rect.width);\n        let y = 100 * ((e.clientY - rect.top) / rect.height);\n\n        if (x > 100) {\n            x = 100;\n        } else if (x < 0) {\n            x = 0;\n        }\n\n        if (y > 100) {\n            y = 100;\n        } else if (y < 0) {\n            y = 0;\n        }\n\n        // console.log(rect);\n        // console.log(e.offsetY, e.clientY, e.movementY, e.y, this.container.clientTop, this.container.clientHeight);\n\n        if (!Alarm.isLocked) {\n            this.setPosition({ x, y });\n        }\n    }\n    public dragDrop(e: DragEvent) {\n        e.preventDefault();\n        this.move(e);\n\n    }\n\n    dragMouseDown(e: MouseEvent) {\n        if (e.button === 0) {\n            this.move(e);\n        }\n    }\n\n    dragEnd(e: DragEvent) {\n        e.preventDefault();\n        this.move(e);\n    }\n\n}\n","export abstract class Decoder {\r\n    public base64Data: string;\r\n    public byteArray: ArrayBufferLike;\r\n    \r\n    constructor(base64Data: string) {\r\n        this.base64Data = base64Data;\r\n        this.byteArray = this.base64decode(base64Data);\r\n    }\r\n\r\n    public base64decode(base64: string): ArrayBufferLike {\r\n        const binaryString = Buffer.from(base64, \"base64\").toString();\r\n        const len = binaryString.length;\r\n        const bytes = new Uint8Array(len);\r\n        for (let i = 0; i < len; i++) {\r\n            bytes[i] = binaryString.charCodeAt(i);\r\n        }\r\n        return bytes.buffer;\r\n        }\r\n}\r\n","import { Decoder } from './decoder';\r\nimport { JDSD51DecodeError } from './jdsd51.error';\r\n\r\nexport enum ButtonStatus {\r\n    Normal = 'Normal',\r\n    Test = 'Test',\r\n    Silenced = 'Silenced',\r\n}\r\n\r\nexport interface IStatus {\r\n    version: string;\r\n    isSmokeDetected: boolean;\r\n    isFaulty: boolean;\r\n    isLowBattery: boolean;\r\n    isTampered: boolean;\r\n    buttonStatus: ButtonStatus;\r\n}\r\n\r\nexport class JDSD51 extends Decoder {\r\n\r\n    public status: IStatus;\r\n    private versionByte: number;\r\n    private detectionTypeByte: number;\r\n    private statusByte: number;\r\n    \r\n\r\n    constructor(base64Data: string) {\r\n        super(base64Data);\r\n        this.decode(this.byteArray);\r\n    }\r\n\r\n    private getVersion(): string {\r\n        return this.versionByte.toPrecision(3);\r\n    }\r\n\r\n    private isSmokeDetected() {\r\n        const smokeDetected = this.detectionTypeByte & 0x04;\r\n        return !!smokeDetected;\r\n    }\r\n\r\n    private isFaulty() {\r\n        const fault = this.statusByte & 0x40;\r\n        return !!fault;\r\n    }\r\n\r\n    private isLowBattery() {\r\n        const lowBattery = this.statusByte & 0x10;\r\n        return !!lowBattery;\r\n    }\r\n\r\n    private isTampered() {\r\n        const tampered = this.statusByte & 0x08;\r\n        return !!tampered;\r\n    }\r\n\r\n    private getButtonStatus(): ButtonStatus {\r\n            if (!!(this.statusByte & 0x01)) {\r\n                return ButtonStatus.Test;\r\n            } else if (!!(this.statusByte & 0x02)) {\r\n                return ButtonStatus.Silenced;\r\n            } else {\r\n                return ButtonStatus.Normal;\r\n            }\r\n    }\r\n\r\n    private decode(byteArray: ArrayBufferLike): void {\r\n\r\n        const data = new DataView(byteArray);\r\n\r\n        if (byteArray.byteLength !== 3) {\r\n            throw new JDSD51DecodeError();\r\n        }\r\n        this.versionByte = data.getUint8(0);\r\n        this.detectionTypeByte = data.getUint8(1);\r\n        this.statusByte = data.getUint8(2);\r\n\r\n        if (this.versionByte !== 2) {\r\n            throw new JDSD51DecodeError();\r\n        }\r\n\r\n        this.status = {\r\n            buttonStatus: this.getButtonStatus(),\r\n            isFaulty: this.isFaulty(),\r\n            isLowBattery: this.isLowBattery(),\r\n            isSmokeDetected: this.isSmokeDetected(),\r\n            isTampered: this.isTampered(),\r\n            version: this.getVersion(),\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\r\n","export class JDSD51DecodeError extends Error {\r\n\r\n    \r\n\r\n    constructor() {\r\n        super();\r\n        this.name = 'JDSD51DecodeError';\r\n        this.message = 'The data does not seem like it\\'s comming from JD-SD51 model';\r\n        Object.setPrototypeOf(this, JDSD51DecodeError.prototype);\r\n    }\r\n\r\n}\r\n","<mat-toolbar>\n    <mat-toolbar-row>\n      <span>Alarm List</span>\n      <span class=\"nav-spacer\"></span>\n      <mat-form-field class=\"filter-form\">\n        <!-- <mat-label>Filter</mat-label> -->\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\" #input>\n      </mat-form-field>\n      <!-- <mat-icon class=\"nav-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon> -->\n      <!-- <button mat-icon-button  matTooltip=\"Remove all records\" aria-label=\"records delete icon\" (click) =\"removeAllRecords()\" [disabled] = \"!logs.length\">\n        <mat-icon class=\"nav-icon\" aria-hidden=\"false\">delete</mat-icon>\n    </button> -->\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n<div class=\"mat-elevation-z1\">\n<table mat-table [dataSource]=\"dataSource\" matSort>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Device Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"devEUI\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Device EUI</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.devEUI }}</td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"profileName\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Device Profile</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.profileName }}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"appName\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Application</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.appName }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"applicationID\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Application ID</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.applicationID }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"lastSeenAt\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Last seen</th>\n    <td mat-cell *matCellDef=\"let element\"><div *ngIf=\"element.lastSeenAt === '-'\" >Never</div><div *ngIf=\"element.lastSeenAt !== '-'\" >{{ (element.lastSeenAt | timeago)}}</div></td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr\n    mat-row\n    *matRowDef=\"let row; columns: displayedColumns\"\n    (click)=\"selection.toggle(row)\"\n  ></tr>\n</table>\n\n<mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" pageSize=\"10\"></mat-paginator>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { Device } from '../api/api.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport * as timeago from 'timeago-reverse';\n\nexport interface DeviceElement {\n    position: number;\n    name: string;\n    devEUI: string;\n    profileName: string;\n    appName: string;\n    applicationID: string;\n    lastSeenAt: string;\n  }\n\n\n@Component({\n  selector: 'app-alarmtable',\n  templateUrl: './alarmtable.component.html',\n  styleUrls: ['./alarmtable.component.scss']\n})\nexport class AlarmtableComponent implements OnChanges {\n    @Input() devices: Device[];\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n    displayedColumns: string[] = ['position', 'name', 'devEUI', 'profileName', 'appName', 'applicationID', 'lastSeenAt'];\n    // displayedColumns: string[] = ['name'];\n\n    deviceElements: DeviceElement[];\n    dataSource: MatTableDataSource<DeviceElement>;\n    selection: SelectionModel<DeviceElement>;\n\n\n    ngOnChanges() {\n        this.deviceElements = [];\n        let i = 1;\n        this.devices.forEach( device => {\n\n            let lastSeenAt = '';\n            try {\n                lastSeenAt = timeago.parse(device.lastSeenAt);\n            } catch (err) {\n                lastSeenAt = device.lastSeenAt;\n            }\n\n            this.deviceElements.push({\n                position: i,\n                name: device.name,\n                devEUI: device.devEUI,\n                profileName: device.profileName,\n                appName: device.appName,\n                applicationID: device.applicationID,\n                lastSeenAt,\n            });\n            i++;\n        });\n        // console.log(this.devices);\n        this.dataSource = new MatTableDataSource<DeviceElement>(this.deviceElements);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.selection = new SelectionModel<DeviceElement>(true, []);\n    }\n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n      this.isAllSelected() ?\n          this.selection.clear() :\n          this.dataSource.data.forEach(row => this.selection.select(row));\n    }\n\n    /** The label for the checkbox on the passed row */\n    checkboxLabel(row?: DeviceElement): string {\n      if (!row) {\n        return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n      }\n      return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n    }\n\n}\n","import { Router } from '@angular/router';\nimport { IpcService } from '../ipc/ipc.service';\nimport { Injectable, NgZone } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IConfig } from '../mytypes';\nimport { map, tap, catchError, switchMap } from 'rxjs/operators';\n\nexport interface Device {\n    devEUI?: string;\n    name?: string;\n    applicationID?: string;\n    appName?: string;\n    description?: string;\n    profileName?: string;\n    fCntUp?: number;\n    fCntDown?: number;\n    appKey?: string;\n    devAddr?: string;\n    appSKey?: string;\n    nwkSKey?: string;\n    lastSeenAt?: string;\n\n\n    deviceProfileID?: string;\n    deviceProfileName?: string;\n    deviceStatusBattery?: number;\n    deviceStatusBatteryLevel?: number;\n    deviceStatusBatteryLevelUnavailable?: boolean;\n    deviceStatusExternalPowerSource?: boolean;\n    deviceStatusMargin?: number;\n}\n\nexport interface Payload {\n    result: Device[];\n    totalCount: string;\n}\nexport interface MqttMessage {\n    applicationID: string;\n    applicationName: string;\n    deviceName: string;\n    devEUI: string;\n    rxInfo: {\n        mac: string;\n        rssi: number;\n        loRaSNR: number;\n        name: string;\n        latitude: number;\n        longitude: number;\n        altitude: number;\n    }[];\n    txInfo: {\n        frequency: number;\n        dataRate: {\n            modulation: string;\n            bandwidth: number;\n            spreadFactor: number;\n        };\n        adr: boolean;\n        codeRate: string;\n    };\n    fCnt: number;\n    fPort: number;\n    data: string;\n}\n\nexport interface MqttEvent extends MqttMessage {\n    _id: number;\n    time: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    // config: IConfig;\n    constructor(public http: HttpClient, public ipcService: IpcService, private router: Router) {}\n\n    getConfig(): Observable<IConfig> {\n        this.removeConfig();\n        return new Observable<IConfig>(\n            subscriber => {\n                this.ipcService.on('server-settings', (_, data: IConfig) => {\n                    this.config = {...data};\n                    subscriber.next(data);\n                    console.log('Config Complete');\n                    subscriber.complete();\n\n                });\n                this.ipcService.send('get-server-settings');\n            }\n        );\n    }\n\n    login() {\n        return this.getConfig().pipe(\n            switchMap(config => {\n                console.log(config);\n                return this.http.post<{ jwt: string }>(\n                    // tslint:disable-next-line: max-line-length\n                    config.server.restApi.scheme + config.server.restApi.host + ':' + config.server.restApi.port + config.server.restApi.uriLogin,\n                    { username: config.server.restApi.username, password: config.server.restApi.password }).pipe(\n                        tap(token => {\n                            this.setJWTToken(token);\n                            console.log('Login Complete');\n                        })\n                    );\n            })\n        );\n        }\n\n\n\n    set config(config: IConfig) {\n        window.localStorage.setItem('config', JSON.stringify(config));\n    }\n\n    get config(): IConfig {\n        return JSON.parse(window.localStorage.getItem('config'));\n    }\n\n    removeConfig() {\n        window.localStorage.removeItem('config');\n    }\n    getJWTToken() {\n        return window.localStorage.getItem('jwt');\n    }\n    setJWTToken(token: {jwt: string}) {\n        window.localStorage.setItem('jwt', token.jwt);\n\n    }\n    removeJWT() {\n        window.localStorage.removeItem('jwt');\n\n    }\n\n    get isLoggedIn(): boolean {\n        const authToken = this.getJWTToken();\n        return (authToken !== null) ? true : false;\n    }\n\n    getAllDevices() {\n        const rest = this.config.server.restApi;\n        return this.http.get<{ result?: Device[], devices?: Device[]}>(\n            // 'https://' + this.ip + '/api/devices?limit=100&offset=0'\n            // 'https://192.168.0.3:8080/api/devices?limit=100&offset=0'\n            rest.scheme + rest.host + ':' + rest.port + '/api/devices?limit=100&applicationID=' + this.config.meta.applicationId\n            , {\n                headers: {\n                    Authorization: 'Bearer ' + this.getJWTToken(),\n                }\n            });\n    }\n\n    // getAllDevices() {\n    //     return this.http.get<{ devices: Device[] }>(\n    //         // 'https://' + this.ip + '/api/devices?limit=100&offset=0'\n    //         // 'https://192.168.0.3:8080/api/devices?limit=100&offset=0'\n    //         'https://' + this.ip + '/api/devices?limit=100'\n    //         , {\n    //             headers: {\n    //                 Authorization: 'Bearer ' + window.localStorage.getItem('jwt'),\n    //             }\n    //         });\n    // }\n}\n","import { AppComponent } from './app.component';\nimport { RestrictedaccessComponent } from './restrictedaccess/restrictedaccess.component';\nimport { ViewerComponent } from './viewer/viewer.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './_helpers/auth.guard';\nimport { LoadingComponent } from './loading/loading.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'viewer', component: ViewerComponent, canActivate: [AuthGuard]\n    },\n    {\n        path: 'restricted/:code', component: RestrictedaccessComponent,\n    },\n    {\n        path: 'loading', component: LoadingComponent,\n    },\n    {\n        path: '', redirectTo: 'loading', pathMatch: 'full',\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>","import { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ApiService } from './api/api.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","import { ApiService } from './api/api.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {PrettyJsonModule} from 'angular2-prettyjson';\nimport { TimeagoModule } from 'ngx-timeago';\n\nimport { AppComponent } from './app.component';\nimport { ViewerComponent } from './viewer/viewer.component';\nimport { AlarmtableComponent } from './alarmtable/alarmtable.component';\nimport { AlarmComponent } from './alarm/alarm.component';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { IpcService } from './ipc/ipc.service';\nimport { RestrictedaccessComponent } from './restrictedaccess/restrictedaccess.component';\nimport { AuthInterceptor } from './_helpers/autoconfig.interceptor';\nimport { LoadingComponent } from './loading/loading.component';\nimport { EventlogComponent } from './eventlog/eventlog.component';\n\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatInputModule} from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewerComponent,\n    AlarmComponent,\n    AlarmtableComponent,\n    RestrictedaccessComponent,\n    LoadingComponent,\n    EventlogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    TimeagoModule.forRoot(),\n    HttpClientModule,\n    AppRoutingModule,\n    PrettyJsonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTabsModule,\n    MatCardModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatInputModule,\n    // MqttModule.forRoot(MQTT_SERVICE_OPTIONS),\n],\n  providers: [\n      IpcService,\n      ApiService,\n      {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<mat-toolbar>\n    <mat-toolbar-row>\n      <span>Event Logs</span>\n      <span class=\"nav-spacer\"></span>\n      <!-- <mat-icon class=\"nav-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon> -->\n      <mat-form-field class=\"filter-form\">\n        <!-- <mat-label>Filter</mat-label> -->\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\" #input>\n      </mat-form-field>\n      <button mat-icon-button  matTooltip=\"Remove all records\" aria-label=\"records delete icon\" (click) =\"removeAllRecords()\" [disabled] = \"!logs.length\">\n        <mat-icon class=\"nav-icon\" aria-hidden=\"false\">delete</mat-icon>\n    </button>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n<!-- <button  mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n    <mat-icon>more_vert</mat-icon>\n  </button> -->\n<div class=\"mat-elevation-z1\">\n<table\n    mat-table\n    [dataSource]=\"dataSource\"\n    multiTemplateDataRows\n>\n    <ng-container\n        matColumnDef=\"{{ column }}\"\n        *ngFor=\"let column of columnsToDisplay\"\n    >\n        <th mat-header-cell *matHeaderCellDef>{{ columnsList[column] }}</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <div *ngIf=\"column === 'time'\">\n                {{ element[column] | date: \"medium\" }}\n            </div>\n\n            <div *ngIf=\"(column !== 'time') && (column !== 'status') \">{{ element[column] }}</div>\n\n            <div *ngIf=\"column === 'status'\">\n                <mat-icon [matTooltip]=\"element['status'].button.tooltip\" (onmouseover)=\"detectTooltipChange($event)\">{{ element['status'].button.icon }}</mat-icon>\n                <mat-icon [matTooltip]=\"element['status'].smokeDetected.tooltip\" (onmouseover)=\"detectTooltipChange($event)\">{{ element['status'].smokeDetected.icon }}</mat-icon>\n                <mat-icon [matTooltip]=\"element['status'].battery.tooltip\" (onmouseover)=\"detectTooltipChange($event)\">{{ element['status'].battery.icon }}</mat-icon>\n                <mat-icon [matTooltip]=\"element['status'].fault.tooltip\" (onmouseover)=\"detectTooltipChange($event)\">{{ element['status'].fault.icon }}</mat-icon>\n                <mat-icon [matTooltip]=\"element['status'].tampered.tooltip\" (onmouseover)=\"detectTooltipChange($event)\">{{ element['status'].tampered.icon }}</mat-icon>\n            </div>\n        \n        </td>\n    </ng-container>\n\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n    <ng-container matColumnDef=\"expandedDetail\">\n        <td\n            mat-cell\n            *matCellDef=\"let element\"\n            [attr.colspan]=\"columnsToDisplay.length\"\n        >\n            <div\n                class=\"example-element-detail\"\n                [@detailExpand]=\"\n                    element == expandedElement ? 'expanded' : 'collapsed'\n                \"\n            >\n                <pre>{{ element.raw_meta | json }}</pre>\n            </div>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr\n        mat-row\n        *matRowDef=\"let element; columns: columnsToDisplay\"\n        class=\"example-element-row\"\n        [class.example-expanded-row]=\"expandedElement === element\"\n        (click)=\"expandedElement = expandedElement === element ? null : element\"\n        (click)=\"toggleStateChanged($event)\"\n        ></tr>\n    <tr\n        mat-row\n        *matRowDef=\"let row; columns: ['expandedDetail']\"\n        class=\"example-detail-row\"\n    ></tr>\n\n    <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n</table>\n\n<mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n\n</div>\n","import { AutoDecoder } from 'lora-smoke-decoder';\nimport { ButtonStatus } from 'lora-smoke-decoder/interfaces';\nimport { DecoderError } from 'lora-smoke-decoder/errors';\nimport { Subscription } from 'rxjs';\nimport { MqttMessage, MqttEvent } from './../api/api.service';\nimport { Component, OnInit, AfterViewInit, OnDestroy, ChangeDetectorRef, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { IpcService } from '../ipc/ipc.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { remote } from 'electron';\nimport {MatSort} from '@angular/material/sort';\n\n\n@Component({\n    selector: 'app-eventlog',\n    templateUrl: './eventlog.component.html',\n    styleUrls: ['./eventlog.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n          state('collapsed', style({height: '0px', minHeight: '0'})),\n          state('expanded', style({height: '*'})),\n          transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n        ]),\n      ],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EventlogComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\n    constructor(private ipc: IpcService, private ref: ChangeDetectorRef) { }\n\n    logs: MqttStuff[] = [];\n    sub: Subscription;\n\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n    dataSource = new MatTableDataSource<MqttStuff>();\n    // dataSource: MqttStuff[] = [];\n    columnsToDisplay = ['time', 'deviceName', 'devEUI', 'status'];\n    columnsList = { time: 'Time', deviceName: 'Device Name', devEUI: 'Device EUI', status: 'Status'};\n    expandedElement: MqttStuff | null;\n\n    ngOnInit(): void {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.ipc.send('mqtt-event-initial');\n        this.ipc.on('mqtt-event', this.handler.bind(this));\n    }\n\n    ngAfterViewInit(): void {}\n\n    handler(_, message) {\n        const obj: MqttEvent = message;\n\n        const rawObj: MqttEvent = {...obj};\n        delete rawObj._id;\n        delete rawObj.time;\n\n        let status: Status = null;\n\n        try {\n            const smoke = new AutoDecoder(obj.data);\n\n            const buttonMeta: StatusMeta = {tooltip: '', icon: ''};\n\n            buttonMeta.tooltip = 'Button ' + smoke.status.buttonStatus;\n            if (smoke.status.buttonStatus === ButtonStatus.Normal) {\n                buttonMeta.icon = 'check';\n            } else if (smoke.status.buttonStatus === ButtonStatus.Silenced) {\n                buttonMeta.icon = 'volume_off';\n            } else if (smoke.status.buttonStatus === ButtonStatus.Test) {\n                buttonMeta.icon = 'touch_app';\n            } else {\n                buttonMeta.tooltip = 'Button status Unkown';\n                buttonMeta.icon = 'error';\n            }\n\n            status = {\n                // tslint:disable-next-line: max-line-length\n                battery : smoke.status.isLowBattery ? {tooltip: 'Battery Low', icon: 'battery_alert'} : {tooltip: 'Battery OK', icon: 'check'},\n                button: buttonMeta,\n                fault: smoke.status.isFaulty ? {tooltip: 'Faulty', icon: 'warning' } : {tooltip: 'No fault', icon: 'check'},\n                tampered: smoke.status.isTampered ? {tooltip: 'Being Demolished', icon: 'warning' } : {tooltip: 'Alarm OK', icon: 'check'},\n                // tslint:disable-next-line: max-line-length\n                smokeDetected: smoke.status.isSmokeDetected ? {tooltip: 'Smoke Detected', icon: 'directions_run'} : { tooltip: 'No smoke', icon: 'check'},\n            };\n\n        } catch (e) {\n\n            if ((e instanceof DecoderError) || (e instanceof TypeError)) {\n                status = {\n                    battery : {tooltip: 'Unknown', icon: 'help_outline'},\n                    button: {tooltip: 'Unknown', icon: 'help_outline'},\n                    fault: {tooltip: 'Unknown', icon: 'help_outline'},\n                    tampered: {tooltip: 'Unknown', icon: 'help_outline'},\n                    smokeDetected: {tooltip: 'Unknown', icon: 'help_outline'},\n                };\n            } else {\n                console.error(e);\n            }\n\n        }\n        const log: MqttStuff = {\n            deviceName: obj.deviceName,\n            devEUI: obj.devEUI,\n            time: obj.time,\n            status,\n            raw_meta: rawObj\n        };\n\n        this.logs.unshift(log);\n        this.logs = this.logs.sort((a, b) => b.time - a.time);\n\n        this.dataSource.data = this.logs;\n\n        this.ref.markForCheck();\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    toggleStateChanged(event) {\n        this.ref.detectChanges();\n        // this.expandedElement = !this.expandedElement;\n    }\n\n    async removeAllRecords() {\n        const result: Electron.MessageBoxReturnValue = await remote.dialog.showMessageBox({\n            title: 'Remove Records',\n            type: 'warning',\n            message: 'Are you sure you want to remove all the records permanently?',\n            buttons: ['Cancel', 'Remove all'],\n            cancelId: 0,\n            defaultId: 1,\n        });\n\n        if (result.response === 1) {\n            this.logs = [];\n            this.dataSource.data = [];\n            this.ipc.send('mqtt-event-removeAll');\n        }\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n    }\n\n    detectTooltipChange(event) {\n        // this.ref.detectChanges();\n    }\n}\n\n\nexport interface Status {\n    battery: StatusMeta;\n    button: StatusMeta;\n    fault: StatusMeta;\n    tampered: StatusMeta;\n    smokeDetected: StatusMeta;\n}\n\nexport interface StatusMeta {\n    icon: string;\n    tooltip: string;\n    color?: string;\n}\n\nexport interface MqttStuff {\n    deviceName: string;\n    devEUI: string;\n    time: number;\n    status: Status;\n    raw_meta: MqttMessage;\n  }\n","import { MqttMessage } from './../api/api.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n@Injectable({\n    providedIn: 'root'\n})\nexport class IpcService {\n    private _ipc: IpcRenderer | undefined = void 0;\n\n    public mqttMessageSubject =  new BehaviorSubject<MqttMessage>(null) ;\n\n    constructor() {\n        if (window.require) {\n            try {\n                this._ipc = window.require('electron').ipcRenderer;\n            } catch (e) {\n                throw e;\n            }\n        } else {\n            console.warn('Electron\\'s IPC was not loaded');\n        }\n    }\n\n    public on(channel: string, listener: (event: Electron.IpcRendererEvent, ...args: any[]) => void): IpcRenderer {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.on(channel, listener);\n    }\n    public once(channel: string, listener: (event: Electron.IpcRendererEvent, ...args: any[]) => void): IpcRenderer {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.once(channel, listener);\n    }\n    public send(channel: string, ...args: any[]): void {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.send(channel, ...args);\n    }\n\n    public sendSync(channel: string, ...args: any[]): any {\n        if (!this._ipc) {\n            return;\n        }\n        return this._ipc.sendSync(channel, ...args);\n    }\n\n    public off(event: string | symbol, listener: (...args: any[]) => void): IpcRenderer {\n        if (!this._ipc) {\n            return;\n        }\n        return this._ipc.off(event, listener);\n    }\n}\n","<div class= 'container'>\n    <mat-spinner color='warn'></mat-spinner>\n</div>","import { Component, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { ApiService } from '../api/api.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit {\n\n\n\n    constructor(private api: ApiService, private router: Router, private ng: NgZone) {\n        this.api.removeJWT();\n    }\n\n    ngOnInit() {\n        console.log('APP COMPONENT!');\n        this.api.login().subscribe( () => {\n            console.log('Login ended');\n            this.ng.run(() => this.router.navigate(['viewer']));\n        },\n        async(err) => {\n            if (err.status === 401) {\n                await this.ng.run(async() => await this.router.navigate(['restricted', '401']));\n                return\n            }\n            await this.ng.run(async() => await this.router.navigate(['restricted', '500']));\n        });\n    }\n}\n","<div class=\"container\">\n    <div class=\"position-middle\">\n        <mat-card>\n            <mat-grid-list cols=\"4\" >\n                <mat-grid-tile colspan=\"1\">\n                    <img src=\"./assets/stop-icon.png\" alt=\"stop-icon\" />\n                </mat-grid-tile>\n                <mat-grid-tile colspan=\"3\">\n                    <mat-card-header>\n                        <mat-card-title>{{title}}</mat-card-title>\n                        <mat-card-subtitle>\n                            {{msg}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    \n                </mat-grid-tile>\n            </mat-grid-list>\n        </mat-card>\n    </div>\n</div>\n\n","import { ActivatedRoute, } from '@angular/router';\nimport { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-restrictedaccess',\n  templateUrl: './restrictedaccess.component.html',\n  styleUrls: ['./restrictedaccess.component.scss']\n})\nexport class RestrictedaccessComponent implements OnInit {\n\n  constructor(private _Activatedroute: ActivatedRoute, private cdref: ChangeDetectorRef) { }\n\n  code = '';\n  msg='';\n  title = '';\n\n  ngOnInit() {\n    this._Activatedroute.params.subscribe( params => {\n        this.code = params['code'];\n        if(this.code === '401') {\n            this.title = 'ACCESS RESTRICTED';\n            this.msg = 'The username or password of your HTTP REST setting may be incorrect. Please close the window and try again with the correct credentials.';\n        }\n        else if (this.code === '500'){\n            this.title = 'WRONG SETTINGS';\n            this.msg = 'The settings may be incorrect. Please close the window and try again with the correct parameters.';\n        }\n        else {\n            this.title = 'UNKNOWN ERROR';\n            this.msg = 'An unknown error has occured';\n        }\n        this.cdref.detectChanges();\n    },\n    err => {},\n    () => {\n        \n    })\n\n  }\n\n}\n","<mat-tab-group animationDuration=\"0ms\" color=\"warn\">\n    <mat-tab label=\"Viewer\" >\n        <mat-toolbar color=\"secondary\">\n            <mat-toolbar-row>\n                <div class=\"example-button-row\">\n                    <button\n                        mat-icon-button\n                        aria-label=\"Example icon-button with a heart icon\"\n                        (click)=\"setBackgroundImage()\"\n                        matTooltip=\"Upload Image\"\n                    >\n                        <mat-icon>add_a_photo</mat-icon>\n                    </button>\n\n                    <button\n                        mat-icon-button\n                        aria-label=\"Example icon-button with a heart icon\"\n                        (click)=\"saveToStorage()\"\n                        matTooltip=\"Save\"\n                    >\n                        <mat-icon>save</mat-icon>\n                    </button>\n\n                    <button\n                        mat-icon-button\n                        aria-label=\"Example icon-button with a heart icon\"\n                        (click)=\"lockDraggable()\"\n                        matTooltip=\"{{ isDraggable ? 'Unlocked' : 'Locked' }}\"\n                    >\n                        <mat-icon>{{\n                            isDraggable ? \"lock_open\" : \"lock\"\n                        }}</mat-icon>\n                    </button>\n\n                    <mat-slider\n                        class=\"example-margin\"\n                        max=\"5\"\n                        min=\"1\"\n                        step=\".5\"\n                        [disabled]=\"!isDraggable\"\n                        [(value)]=\"alarmSize\"\n                        matTooltip=\"Alarm size\"\n                        (input)=\"changeAlarmSize($event)\"\n                    >\n                    </mat-slider>\n\n                    <button\n                        mat-icon-button\n                        aria-label=\"Example icon-button with a heart icon\"\n                        (click)=\"cancelChange()\"\n                        [disabled]=\"!isDraggable\"\n                        matTooltip=\"Cancel Changes\"\n                    >\n                        <mat-icon>settings_backup_restore</mat-icon>\n                    </button>\n\n                    <button\n                        mat-icon-button\n                        aria-label=\"Example icon-button with a heart icon\"\n                        (click)=\"resetPositions()\"\n                        matTooltip=\"Start again\"\n                        [disabled]=\"disableSearch || !isDraggable\"\n                    >\n                        <mat-icon>not_interested</mat-icon>\n                    </button>\n\n                    <button\n                        mat-icon-button\n                        aria-label=\"Example icon-button with a heart icon\"\n                        (click)=\"turnOffAlarm()\"\n                        matTooltip=\"Turn off Alarms\"\n                    >\n                        <mat-icon>volume_off</mat-icon>\n                    </button>\n                </div>\n\n                <div class=\"example-spacer\"></div>\n                <button\n                    mat-icon-button\n                    aria-label=\"Example icon-button with a heart icon\"\n                    (click)=\"goFullscreen()\"\n                    matTooltip=\"Fullscreen\"\n                >\n                    <mat-icon>fullscreen</mat-icon>\n                </button>\n            </mat-toolbar-row>\n        </mat-toolbar>\n\n        <!-- <button (click)=\"lockDraggable()\">{{ isDraggable? 'Lock':'Unlock' }}</button>\n          <button (click)=\"restorePositions()\">Restore</button>\n          <button (click)=\"resetPositions()\">Reset</button>\n          <button (click)=\"savePositions()\">Save</button> -->\n        <!-- <button (click)=\"addAlarm('name')\">Add Alarm</button> -->\n        <!-- <button *ngFor=\"let alarm of alarms\" (click)=\"changeColor(alarm)\">\n            Change color\n          </button> -->\n        <div class=\"container\">\n            <div class=\"boundary\" id=\"boundary\">\n                <img\n                    src=\"./assets/default_upload.png\"\n                    class=\"layout-image\"\n                    id=\"layout-image\"\n                    draggable=\"false\"\n                />\n\n                <div\n                    *ngFor=\"let alarm of alarms\"\n                    class=\"alarm-obj\"\n                    [ngStyle]=\"alarm.style\"\n                    [innerHTML]=\"alarm.alarmDOM.outerHTML\"\n                    [draggable]=\"isDraggable\"\n                    (dragend)=\"alarm.dragDrop($event)\"\n                    (mousedown)=\"alarm.dragMouseDown($event)\"\n                    matTooltip=\"{{ alarm.device.name }}\"\n                ></div>\n            </div>\n            <!-- <button mat-button (click)=\"triggerAlarm1()\">Trigger Alarm 1</button>\n            <button mat-button (click)=\"stopAlarm1()\">Stop Alarm 1</button>\n            <button mat-button (click)=\"triggerAlarm2()\">Trigger Alarm 2</button>\n            <button mat-button (click)=\"stopAlarm2()\">Stop Alarm 2</button> -->\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Alarm List\">\n        <div class=\"container\">\n            <app-alarmtable [devices]=\"dev\"></app-alarmtable>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Event Logs\">\n        <div class=\"container\">\n            <app-eventlog></app-eventlog>\n        </div>\n    </mat-tab>\n</mat-tab-group>\n","import { switchMap, tap } from 'rxjs/operators';\nimport { AlarmAsObject } from './../alarm-object/alarm';\nimport { IpcService } from './../ipc/ipc.service';\nimport { ApiService, Device, MqttMessage } from '../api/api.service';\nimport { Component, OnInit, OnDestroy, ChangeDetectorRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { Alarm } from '../alarm-object/alarm';\nimport { fromEvent, Subscription, timer } from 'rxjs';\nimport { MatSliderChange } from '@angular/material/slider';\nimport * as timeago from 'timeago-reverse';\nimport { remote } from 'electron';\nimport { JDSD51, ButtonStatus } from '../alarm-object/decoder/jdsd51.decoder';\nimport { JDSD51DecodeError } from '../alarm-object/decoder/jdsd51.error';\n\n@Component({\n    selector: 'app-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class ViewerComponent implements OnInit, OnDestroy, AfterViewInit {\n    constructor(public api: ApiService, public ipc: IpcService, private ref: ChangeDetectorRef) { }\n\n    container: Element;\n    containerSubscription: Subscription;\n\n    disableSearch = false;\n\n    private apiIntervals: Subscription;\n    public alarms: Alarm[] = [];\n    alarmSize = 0;\n    isDraggable = false;\n\n    image: HTMLImageElement;\n\n    dev: Device[] = [];\n\n    private stopAlarmHandler(_, message) {\n        this.alarms.forEach(alarm => {\n            alarm.blinkStop();\n        });\n    }\n\n    private mqttMessageHandler(_, message) {\n        const obj: MqttMessage = message;\n        const alarm = this.alarms.find(alrm => {\n            return alrm.device.devEUI === obj.devEUI;\n        });\n\n        try {\n            const smoke = new JDSD51(obj.data);\n\n            if (smoke.status.buttonStatus === ButtonStatus.Test) {\n                alarm.blinkFor(5000, 200, this.ref);\n            }\n\n            if (!smoke.status.isSmokeDetected && smoke.status.buttonStatus === ButtonStatus.Normal) {\n                alarm.blinkStop();\n                alarm.normalState();\n            }\n\n            if (smoke.status.isSmokeDetected && (smoke.status.buttonStatus === ButtonStatus.Normal)) {\n                alarm.blink(200, this.ref);\n            }\n\n            if (smoke.status.isSmokeDetected && (smoke.status.buttonStatus === ButtonStatus.Silenced)) {\n                alarm.blinkStop();\n            }\n\n            if (smoke.status.isLowBattery) {\n                alarm.lowBatteryAlert(this.ref);\n            }\n\n            if (smoke.status.isFaulty) {\n                alarm.warningState();\n            }\n\n            if (smoke.status.isTampered) {\n                alarm.warningState();\n            }\n        } catch (e) {\n            if (!(e instanceof JDSD51DecodeError)) {\n                console.error(e);\n            }\n        }\n    }\n\n    turnOffAlarm() {\n        this.ipc.send('mute-alarm');\n        this.alarms.forEach((alarm) => {\n            if (alarm.isBlinking) {\n                alarm.blinkStop();\n            }\n        });\n    }\n    async ngAfterViewInit() {\n        this.container = document.querySelector<Element>('#boundary');\n        this.image = document.getElementById('layout-image') as HTMLImageElement;\n\n        this.ipc.on('stop-alarms', this.stopAlarmHandler.bind(this));\n\n        this.ipc.on('mqtt-message', this.mqttMessageHandler.bind(this));\n\n        let i = 0;\n        while (true) {\n            try {\n                const key = window.localStorage.key(i);\n                if (key === null) { break; }\n                if (key.startsWith('smoke_alarm_')) {\n                    const val: Alarm = JSON.parse(window.localStorage.getItem(key));\n                    this.alarms.push(new Alarm(val.device, val.position));\n                }\n                i++;\n            } catch (error) {\n                break;\n            }\n        }\n\n        const item = window.localStorage.getItem('layout-image');\n        if (!!item) {\n            this.image.src = item;\n        } else {\n            this.image.src = './assets/default_upload.png';\n        }\n\n        this.containerSubscription = fromEvent(this.container, 'dragover').subscribe(e => e.preventDefault());\n    }\n\n    ngOnDestroy() {\n        this.containerSubscription.unsubscribe();\n        this.apiIntervals.unsubscribe();\n        this.ipc.off('stop-alarms', this.stopAlarmHandler.bind(this));\n        this.ipc.off('mqtt-message', this.mqttMessageHandler.bind(this));\n    }\n\n    async ngOnInit() {\n\n        Alarm.isLocked = !this.isDraggable;\n\n        this.disableSearch = true;\n\n        const interval = timer(0, 30000).pipe(\n            switchMap(() => {\n                return this.api.getAllDevices();\n            }),\n            tap((devices) => {\n                // console.log('TRIGGERED!');\n                if (!!devices.result) {\n                    this.dev = devices.result;\n                } else if (!!devices.devices) {\n                    this.dev = devices.devices;\n                } else {\n                    remote.dialog.showErrorBox('Incorrect Settings', 'Please provide correct settings and restart the app');\n                }\n                this.dev.forEach(device => {\n                    this.alarms.forEach(alarm => {\n                        if (alarm.device.devEUI === device.devEUI) {\n                            alarm.device = device;\n                            alarm.updateState();\n                        }\n                    });\n                });\n            })\n        );\n\n        this.initializeAlarms().subscribe({\n            complete: () => {\n                this.apiIntervals = interval.subscribe();\n            }\n        });\n        // Timer starts at 0. Get the states of the devices at 0th second. Get them again after every 30 seconds.\n\n\n\n    }\n\n\n    initializeAlarms() {\n        return this.api.getAllDevices().pipe(tap((devices) => {\n            if (!!devices.result) {\n                this.dev = devices.result;\n            } else if (!!devices.devices) {\n                this.dev = devices.devices;\n            } else {\n                remote.dialog.showErrorBox('Incorrect Settings', 'Please provide correct settings and restart the app');\n            }\n\n        },\n            err => { this.disableSearch = false; },\n            () => {\n                const offset = 4;\n                const spaceX = 4;\n                const spaceY = 6;\n                const constraintX = 20;\n                let x = offset;\n                let y = offset;\n                this.dev.forEach((device: Device) => {\n                    const alarm = this.getAlarmFromMemory(device);\n                    if (!!alarm) {\n                        const newAlarm = new Alarm(alarm.device, alarm.position);\n                        newAlarm.setSize(alarm.size);\n                        this.addAlarm(newAlarm);\n                    } else {\n                        const newAlarm = new Alarm(device, { x, y });\n                        this.addAlarm(newAlarm);\n                        x += spaceX;\n                        if (x > (spaceX * constraintX) + 3) {\n                            x = offset;\n                            y += spaceY;\n                        }\n                    }\n                });\n                this.disableSearch = false;\n            }));\n    }\n    addAlarm(alarm: Alarm) {\n        this.alarms.push(alarm);\n        this.alarmSize = alarm.size;\n    }\n\n    lockDraggable() {\n        this.isDraggable = !this.isDraggable;\n        Alarm.isLocked = !this.isDraggable;\n    }\n\n    saveToStorage() {\n        this.alarms.forEach(alarm => {\n            window.localStorage.setItem(alarm.device.devEUI, alarm.asJSONString);\n        });\n        if (!!this.image.src) {\n            window.localStorage.setItem('layout-image', this.image.src);\n        }\n\n        remote.dialog.showMessageBox({ title: 'Saved', message: 'Your layout has been saved!' });\n    }\n\n    getAlarmFromMemory(device: Device): AlarmAsObject {\n        try {\n            return JSON.parse(window.localStorage.getItem(device.devEUI));\n        } catch {\n            return null;\n        }\n    }\n\n    cancelChange() {\n        this.alarms.forEach(alarm => {\n            const _alarm: AlarmAsObject = this.getAlarmFromMemory(alarm.device);\n            if (!_alarm) { return; }\n            alarm.setPosition(_alarm.position);\n            alarm.setSize(_alarm.size);\n            this.alarmSize = alarm.size;\n        });\n        const item = window.localStorage.getItem('layout-image');\n        if (!!item) {\n            this.image.src = item;\n        } else {\n            this.image.src = './assets/default_upload.png';\n        }\n    }\n\n    resetPositions() {\n        this.disableSearch = true;\n        this.dev = [];\n        this.alarms = [];\n        this.api.getAllDevices().subscribe((devices) => {\n            if (!!devices.result) {\n                this.dev = devices.result;\n            } else if (!!devices.devices) {\n                this.dev = devices.devices;\n            }\n        },\n            err => { this.disableSearch = false; },\n            () => {\n                const offset = 4;\n                const spaceX = 4;\n                const spaceY = 6;\n                const constraintX = 20;\n                let x = offset;\n                let y = offset;\n                this.dev.forEach((device: Device) => {\n\n                    const newAlarm = new Alarm(device, { x, y });\n                    this.addAlarm(newAlarm);\n                    x += spaceX;\n                    if (x > (spaceX * constraintX) + 3) {\n                        x = offset;\n                        y += spaceY;\n                    }\n                });\n                this.disableSearch = false;\n            });\n    }\n\n    changeAlarmSize(e: MatSliderChange) {\n        // console.log(e.value);\n        this.alarms.forEach(alarm => {\n            alarm.setSize(e.value);\n        });\n    }\n    goFullscreen() {\n        this.isDraggable = false;\n        Alarm.isLocked = true;\n        this.container.requestFullscreen();\n    }\n\n    async setBackgroundImage() {\n        const data = await remote.dialog.showOpenDialog(\n            {\n                title: 'Upload layout file',\n                filters: [{ name: 'Images', extensions: ['jpeg', 'jpg', 'png'] }],\n            },\n        );\n\n        if (!!data.filePaths[0]) {\n            this.image.src = data.filePaths[0];\n            // this.resetPositions();\n        }\n    }\n\n    triggerAlarm(i: number) {\n        this.alarms[i].blink(100);\n    }\n\n    triggerAlarm1() {\n        this.alarms[0].blink(100);\n    }\n\n    stopAlarm1() {\n        this.alarms[0].blinkStop();\n    }\n\n    triggerAlarm2() {\n        // this.alarms[1].blink(100);\n        this.alarms[1].blinkFor(3000, 100);\n    }\n\n    stopAlarm2() {\n        this.alarms[1].blinkStop();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","module.exports = require(\"electron\");"],"sourceRoot":"webpack:///"}