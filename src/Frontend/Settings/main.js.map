{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ipc/ipc.service.ts","./src/app/mqtt/mqtt.component.ts","./src/app/mqtt/mqtt.component.html","./src/app/rest/rest.component.ts","./src/app/rest/rest.component.html","./src/environments/environment.ts","./src/main.ts","external \"electron\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RestComponent } from './rest/rest.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MqttComponent } from './mqtt/mqtt.component';\n\n\nconst routes: Routes = [\n    { path: 'mqtt', component: MqttComponent},\n    { path: 'rest', component: RestComponent},\n    { path: '', redirectTo: 'mqtt', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { FormGroup, Form } from '@angular/forms';\nimport { Component, OnInit, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { IpcService } from './ipc/ipc.service';\nimport { IConfig } from './types/config.type';\nimport { remote } from 'electron';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\n    title = 'Settings';\n    config: IConfig = { server: {} };\n    mqttFg: FormGroup;\n    restFg: FormGroup;\n\n    constructor(private ipcRenderer: IpcService, private ref: ChangeDetectorRef) { }\n\n    ngOnInit() {\n\n        this.ipcRenderer.on('server-settings', (_, conf: IConfig) => {\n            this.config = { ...conf };\n            this.ref.detectChanges();\n        });\n    }\n\n    ngAfterViewInit() {\n\n        this.ipcRenderer.send('get-server-settings');\n\n    }\n\n    mqttEvent(fg: FormGroup) {\n        this.mqttFg = fg;\n    }\n\n    restEvent(fg: FormGroup) {\n        this.restFg = fg;\n    }\n\n    sendForm() {\n        if (this.mqttFg.valid && this.restFg.valid) {\n            this.config.server.mqtt.host = this.mqttFg.get('host').value;\n            this.config.server.mqtt.port = this.mqttFg.get('port').value;\n            this.config.server.mqtt.username = this.mqttFg.get('username').value;\n            this.config.server.mqtt.password = this.mqttFg.get('password').value;\n            this.config.meta.applicationId = this.mqttFg.get('applicationId').value;\n\n            this.config.server.restApi.scheme = this.restFg.get('scheme').value;\n            this.config.server.restApi.host = this.restFg.get('host').value;\n            this.config.server.restApi.port = this.restFg.get('port').value;\n            this.config.server.restApi.username = this.restFg.get('username').value;\n            this.config.server.restApi.password = this.restFg.get('password').value;\n            this.config.server.restApi.uri = this.restFg.get('uri').value;\n            this.config.server.restApi.uriLogin = this.restFg.get('uriLogin').value;\n\n            this.ipcRenderer.send('save-configuration', this.config);\n\n            remote.dialog.showMessageBox({\n                type: 'none',\n                title: 'Saved',\n                message: 'SETTINGS SAVED!',\n                detail: 'Application needs to relaunch for changes to properly take effect.',\n                buttons: ['Relaunch Later', 'Relaunch Now'],\n                cancelId: 0,\n            }).then(\n                (res) => {\n                    if (res.response === 1) {\n                        remote.app.relaunch();\n                        remote.app.quit();\n                    }\n                }\n            );\n\n        } else {\n            remote.dialog.showErrorBox('Invalid Input', 'Some settings you have entered are not valid. Please check again before saving.');\n        }\n    }\n\n    resetConfigurations() {\n        this.config = this.ipcRenderer.sendSync('get-default-configuration');\n    }\n}\n","<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" style=\"margin: 0px 10px;\">\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <a class=\"nav-link active\" id=\"mqtt-tab\" data-toggle=\"tab\" href=\"#mqtt\" role=\"tab\" aria-controls=\"mqtt\" aria-selected=\"true\">MQTT</a>\r\n    </li>\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <a class=\"nav-link\" id=\"rest-tab\" data-toggle=\"tab\" href=\"#rest\" role=\"tab\" aria-controls=\"rest\" aria-selected=\"false\">REST</a>\r\n    </li>\r\n  </ul>\r\n  <div class=\"tab-content\" id=\"myTabContent\">\r\n    <div class=\"tab-pane fade show active\" id=\"mqtt\" role=\"tabpanel\" aria-labelledby=\"mqtt-tab\"><br><app-mqtt [config]=\"config\" (mqttEvent)='mqttEvent($event)'></app-mqtt></div>\r\n    <div class=\"tab-pane fade\" id=\"rest\" role=\"tabpanel\" aria-labelledby=\"rest-tab\"><br><app-rest [config]=\"config\" (restEvent)='restEvent($event)'></app-rest></div>\r\n  </div>\r\n  <div class=\"text-center\">\r\n    <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"resetConfigurations()\">Reset to default</button>\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"sendForm()\" id=\"save\">Save</button>\r\n  </div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MqttComponent } from './mqtt/mqtt.component';\nimport { IpcService } from './ipc/ipc.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RestComponent } from './rest/rest.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MqttComponent,\n    RestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [IpcService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n@Injectable({\n    providedIn: 'root'\n})\nexport class IpcService {\n    private _ipc: IpcRenderer | undefined = void 0;\n    constructor() {\n        if (window.require) {\n            try {\n                this._ipc = window.require('electron').ipcRenderer;\n            } catch (e) {\n                throw e;\n            }\n        } else {\n            console.warn('Electron\\'s IPC was not loaded');\n        }\n    }\n\n    public on(channel: string, listener: (event: Electron.IpcRendererEvent, ...args: any[]) => void): IpcRenderer {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.on(channel, listener);\n    }\n    public once(channel: string, listener: (event: Electron.IpcRendererEvent, ...args: any[]) => void): IpcRenderer {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.once(channel, listener);\n    }\n    public send(channel: string, ...args: any[]): void {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.send(channel, ...args);\n    }\n\n    public sendSync(channel: string, ...args: any[]): any {\n        if (!this._ipc) {\n            return;\n        }\n        return this._ipc.sendSync(channel, ...args);\n    }\n\n    public off(event: string | symbol, listener: (...args: any[]) => void): any {\n        if (!this._ipc) {\n            return;\n        }\n        return this._ipc.off(event, listener);\n    }\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { IConfig } from '../types/config.type';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-mqtt',\n    templateUrl: './mqtt.component.html',\n    styleUrls: ['./mqtt.component.scss'],\n})\nexport class MqttComponent implements OnInit, OnChanges {\n\n    @Input() config: IConfig;\n\n    @Output() mqttEvent = new EventEmitter();\n\n    mqtt = new FormGroup({\n        host: new FormControl(''),\n        port : new FormControl(0),\n        username : new FormControl(''),\n        password : new FormControl(''),\n        applicationId : new FormControl(''),\n    });\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.mqtt.valueChanges.subscribe(() => {\n            this.mqttEvent.emit(this.mqtt);\n        });\n    }\n\n    ngOnChanges(): void {\n        try {\n            this.mqtt.patchValue(this.config.server.mqtt);\n            this.mqtt.get('applicationId').setValue(this.config.meta.applicationId);\n        } catch (e) {\n            if (!(e instanceof TypeError)) {\n                console.error(e);\n            }\n        }\n    }\n\n\n\n}\n","<!-- <h3 style=\"text-align: center; color:rgb(0, 80, 155);;\">MQTT Settings</h3> -->\n    <form [formGroup]=\"mqtt\">\n\n        <div class=\"input-group mb-3 \" >\n            <div class=\"input-group-prepend invalid\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Host</span>\n            </div>\n            <input\n              type=\"text\"\n              formControlName=\"host\"\n              class=\"form-control\"\n              placeholder=\"IP or Domain\"\n              aria-label=\"Host\"\n              required\n            />\n          </div>\n\n\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Port</span>\n            </div>\n            <input\n              type=\"number\"\n              formControlName=\"port\"\n              max=\"65535\"\n              min=\"0\"\n              class=\"form-control\"\n              placeholder=\"443\"\n              aria-label=\"Port\"\n              required\n            />\n          </div>\n\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Username</span>\n            </div>\n            <input\n              type=\"text\"\n              formControlName=\"username\"\n              class=\"form-control\"\n              placeholder=\"john.doe\"\n              aria-label=\"Username\"\n            />\n          </div>\n\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Password</span>\n            </div>\n            <input\n              type=\"password\"\n              formControlName=\"password\"\n              class=\"form-control\"\n              placeholder=\"******\"\n              aria-label=\"Password\"\n            />\n          </div>\n      <hr />\n\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"basic-addon1\">Application ID</span>\n        </div>\n        <input\n          type=\"number\"\n          formControlName=\"applicationId\"\n          min=\"1\"\n          class=\"form-control\"\n          placeholder=\"1\"\n          aria-label=\"Port\"\n          required\n        />\n      </div>\n      \n\n    </form>","import { FormGroup, FormControl } from '@angular/forms';\nimport { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { IConfig } from '../types/config.type';\n\n@Component({\n    selector: 'app-rest',\n    templateUrl: './rest.component.html',\n    styleUrls: ['./rest.component.scss']\n})\nexport class RestComponent implements OnInit, OnChanges {\n\n    @Input() config: IConfig;\n    @Output() restEvent = new EventEmitter();\n\n    rest = new FormGroup({\n        host: new FormControl(''),\n        uriLogin: new FormControl(''),\n        username: new FormControl(''),\n        password: new FormControl(''),\n        uri: new FormControl(''),\n        port: new FormControl(0),\n        scheme: new FormControl('https://'),\n    });\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.rest.valueChanges.subscribe(() => {\n            this.restEvent.emit(this.rest);\n        });\n    }\n\n    ngOnChanges() {\n        try {\n            this.rest.patchValue(this.config.server.restApi);\n        } catch (e) {\n            if (!(e instanceof TypeError)) {\n                console.error(e);\n            }\n        }\n    }\n}\n","<div style=\"margin: 0 15px;\">\n  <!-- <h3 style=\"text-align: center; color:rgb(0, 80, 155);;\">REST Settings</h3> -->\n  <form [formGroup]=\"rest\">\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <label class=\"input-group-text\" for=\"inputGroupSelect01\">Scheme</label>\n      </div>\n      <select\n        class=\"custom-select\"\n        id=\"inputGroupSelect01\"\n        formControlName=\"scheme\"\n        required\n      >\n        <option value=\"http://\">http://</option>\n        <option selected value=\"https://\">https://</option>\n      </select>\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Host</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"host\"\n        class=\"form-control\"\n        placeholder=\"IP or Domain\"\n        aria-label=\"Host\"\n        required\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Port</span>\n      </div>\n      <input\n        type=\"number\"\n        formControlName=\"port\"\n        max=\"65535\"\n        min=\"0\"\n        class=\"form-control\"\n        placeholder=\"443\"\n        aria-label=\"Port\"\n        required\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Username</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"username\"\n        class=\"form-control\"\n        placeholder=\"john.smith\"\n        aria-label=\"Username\"\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Password</span>\n      </div>\n      <input\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        placeholder=\"******\"\n        aria-label=\"Password\"\n      />\n    </div>\n\n    <hr />\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Login URL</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"uriLogin\"\n        class=\"form-control\"\n        placeholder=\"/api/internal/login\"\n        aria-label=\"loginUrl\"\n        required\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Base API URL</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"uri\"\n        class=\"form-control\"\n        placeholder=\"/api\"\n        aria-label=\"apiUrl\"\n        required\n      />\n    </div>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","module.exports = require(\"electron\");"],"sourceRoot":"webpack:///"}