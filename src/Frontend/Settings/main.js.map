{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ipc/ipc.service.ts","webpack:///src/app/mqtt/mqtt.component.ts","webpack:///src/app/mqtt/mqtt.component.html","webpack:///src/app/rest/rest.component.ts","webpack:///src/app/rest/rest.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///external \"electron\""],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","ipcRenderer","ref","title","config","server","on","_","conf","console","log","detectChanges","send","fg","mqttFg","restFg","valid","mqtt","host","get","value","port","username","password","meta","applicationId","restApi","scheme","uri","uriLogin","dialog","showMessageBox","type","message","detail","buttons","cancelId","res","response","app","relaunch","quit","showErrorBox","sendSync","mqttEvent","restEvent","resetConfigurations","sendForm","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","IpcService","_ipc","window","require","warn","channel","listener","once","args","event","off","providedIn","MqttComponent","valueChanges","subscribe","emit","patchValue","setValue","TypeError","error","RestComponent","rest","environment","production","bootstrapModule","err"],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RestComponent } from './rest/rest.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MqttComponent } from './mqtt/mqtt.component';\n\n\nconst routes: Routes = [\n    { path: 'mqtt', component: MqttComponent},\n    { path: 'rest', component: RestComponent},\n    { path: '', redirectTo: 'mqtt', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { FormGroup, Form } from '@angular/forms';\nimport { Component, OnInit, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { IpcService } from './ipc/ipc.service';\nimport { IConfig } from './types/config.type';\nimport { remote } from 'electron';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\n    title = 'Settings';\n    config: IConfig = { server: {} };\n    mqttFg: FormGroup;\n    restFg: FormGroup;\n\n    constructor(private ipcRenderer: IpcService, private ref: ChangeDetectorRef) { }\n\n    ngOnInit() {\n\n        this.ipcRenderer.on('server-settings', (_, conf: IConfig) => {\n            this.config = { ...conf };\n            console.log('ngonverinit');\n            this.ref.detectChanges();\n        });\n    }\n\n    ngAfterViewInit() {\n\n        this.ipcRenderer.send('get-server-settings');\n\n    }\n\n    mqttEvent(fg: FormGroup) {\n        this.mqttFg = fg;\n    }\n\n    restEvent(fg: FormGroup){\n        this.restFg = fg;\n    }\n\n    async sendForm() {\n        if (this.mqttFg.valid && this.restFg.valid) {\n            this.config.server.mqtt.host = this.mqttFg.get('host').value;\n            this.config.server.mqtt.port = this.mqttFg.get('port').value;\n            this.config.server.mqtt.username = this.mqttFg.get('username').value;\n            this.config.server.mqtt.password = this.mqttFg.get('password').value;\n            this.config.meta.applicationId = this.mqttFg.get('applicationId').value;\n\n            this.config.server.restApi.scheme = this.restFg.get('scheme').value;\n            this.config.server.restApi.host = this.restFg.get('host').value;\n            this.config.server.restApi.port = this.restFg.get('port').value;\n            this.config.server.restApi.username = this.restFg.get('username').value;\n            this.config.server.restApi.password = this.restFg.get('password').value;\n            this.config.server.restApi.uri = this.restFg.get('uri').value;\n            this.config.server.restApi.uriLogin = this.restFg.get('uriLogin').value;\n\n            this.ipcRenderer.send('save-configuration', this.config);\n\n            const res = await remote.dialog.showMessageBox({\n                type: 'none',\n                title: 'Saved',\n                message: 'SETTINGS SAVED!',\n                detail: 'Application needs to relaunch for changes to properly take effect.',\n                buttons: ['Relaunch Later', 'Relaunch Now'],\n                cancelId: 0,\n            });\n\n            if (res.response === 1) {\n                remote.app.relaunch();\n                remote.app.quit();\n            }\n\n        } else {\n            remote.dialog.showErrorBox('Invalid Input', 'Some settings you have entered are not valid. Please check again before saving.');\n        }\n    }\n\n    resetConfigurations() {\n        this.config = this.ipcRenderer.sendSync('get-default-configuration');\n    }\n}\n","<ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\" style=\"margin: 0px 10px;\">\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <a class=\"nav-link active\" id=\"mqtt-tab\" data-toggle=\"tab\" href=\"#mqtt\" role=\"tab\" aria-controls=\"mqtt\" aria-selected=\"true\">MQTT</a>\r\n    </li>\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <a class=\"nav-link\" id=\"rest-tab\" data-toggle=\"tab\" href=\"#rest\" role=\"tab\" aria-controls=\"rest\" aria-selected=\"false\">REST</a>\r\n    </li>\r\n  </ul>\r\n  <div class=\"tab-content\" id=\"myTabContent\">\r\n    <div class=\"tab-pane fade show active\" id=\"mqtt\" role=\"tabpanel\" aria-labelledby=\"mqtt-tab\"><br><app-mqtt [config]=\"config\" (mqttEvent)='mqttEvent($event)'></app-mqtt></div>\r\n    <div class=\"tab-pane fade\" id=\"rest\" role=\"tabpanel\" aria-labelledby=\"rest-tab\"><br><app-rest [config]=\"config\" (restEvent)='restEvent($event)'></app-rest></div>\r\n  </div>\r\n  <div class=\"text-center\">\r\n    <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"resetConfigurations()\">Reset to default</button>\r\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"sendForm()\" id=\"save\">Save</button>\r\n  </div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MqttComponent } from './mqtt/mqtt.component';\nimport { IpcService } from './ipc/ipc.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RestComponent } from './rest/rest.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MqttComponent,\n    RestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [IpcService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n@Injectable({\n    providedIn: 'root'\n})\nexport class IpcService {\n    private _ipc: IpcRenderer | undefined = void 0;\n    constructor() {\n        if (window.require) {\n            try {\n                this._ipc = window.require('electron').ipcRenderer;\n            } catch (e) {\n                throw e;\n            }\n        } else {\n            console.warn('Electron\\'s IPC was not loaded');\n        }\n    }\n\n    public on(channel: string, listener: (event: Electron.IpcRendererEvent, ...args: any[]) => void): IpcRenderer {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.on(channel, listener);\n    }\n    public once(channel: string, listener: (event: Electron.IpcRendererEvent, ...args: any[]) => void): IpcRenderer {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.once(channel, listener);\n    }\n    public send(channel: string, ...args: any[]): void {\n        if (!this._ipc) {\n            return;\n        }\n        this._ipc.send(channel, ...args);\n    }\n\n    public sendSync(channel: string, ...args: any[]): any {\n        if (!this._ipc) {\n            return;\n        }\n        return this._ipc.sendSync(channel, ...args);\n    }\n\n    public off(event: string | symbol, listener: (...args: any[]) => void): any {\n        if (!this._ipc) {\n            return;\n        }\n        return this._ipc.off(event, listener);\n    }\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { IConfig } from '../types/config.type';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-mqtt',\n    templateUrl: './mqtt.component.html',\n    styleUrls: ['./mqtt.component.scss'],\n})\nexport class MqttComponent implements OnInit, OnChanges {\n\n    @Input() config: IConfig;\n\n    @Output() mqttEvent = new EventEmitter();\n\n    mqtt = new FormGroup({\n        host: new FormControl(''),\n        port : new FormControl(0),\n        username : new FormControl(''),\n        password : new FormControl(''),\n        applicationId : new FormControl(''),\n    });\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.mqtt.valueChanges.subscribe(() => {\n            this.mqttEvent.emit(this.mqtt);\n        });\n    }\n\n    ngOnChanges(): void {\n        try {\n            this.mqtt.patchValue(this.config.server.mqtt);\n            this.mqtt.get('applicationId').setValue(this.config.meta.applicationId);\n        } catch (e) {\n            if (!(e instanceof TypeError)) {\n                console.error(e);\n            }\n        }\n    }\n\n\n\n}\n","<!-- <h3 style=\"text-align: center; color:rgb(0, 80, 155);;\">MQTT Settings</h3> -->\n    <form [formGroup]=\"mqtt\">\n\n        <div class=\"input-group mb-3 \" >\n            <div class=\"input-group-prepend invalid\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Host</span>\n            </div>\n            <input\n              type=\"text\"\n              formControlName=\"host\"\n              class=\"form-control\"\n              placeholder=\"IP or Domain\"\n              aria-label=\"Host\"\n              required\n            />\n          </div>\n\n\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Port</span>\n            </div>\n            <input\n              type=\"number\"\n              formControlName=\"port\"\n              max=\"65535\"\n              min=\"0\"\n              class=\"form-control\"\n              placeholder=\"443\"\n              aria-label=\"Port\"\n              required\n            />\n          </div>\n\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Username</span>\n            </div>\n            <input\n              type=\"text\"\n              formControlName=\"username\"\n              class=\"form-control\"\n              placeholder=\"john.doe\"\n              aria-label=\"Username\"\n            />\n          </div>\n\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"basic-addon1\">Password</span>\n            </div>\n            <input\n              type=\"password\"\n              formControlName=\"password\"\n              class=\"form-control\"\n              placeholder=\"******\"\n              aria-label=\"Password\"\n            />\n          </div>\n      <hr />\n\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"basic-addon1\">Application ID</span>\n        </div>\n        <input\n          type=\"number\"\n          formControlName=\"applicationId\"\n          min=\"1\"\n          class=\"form-control\"\n          placeholder=\"1\"\n          aria-label=\"Port\"\n          required\n        />\n      </div>\n      \n\n    </form>","import { FormGroup, FormControl } from '@angular/forms';\nimport { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { IConfig } from '../types/config.type';\n\n@Component({\n    selector: 'app-rest',\n    templateUrl: './rest.component.html',\n    styleUrls: ['./rest.component.scss']\n})\nexport class RestComponent implements OnInit, OnChanges {\n\n    @Input() config: IConfig;\n    @Output() restEvent = new EventEmitter();\n\n    rest = new FormGroup({\n        host: new FormControl(''),\n        uriLogin: new FormControl(''),\n        username: new FormControl(''),\n        password: new FormControl(''),\n        uri: new FormControl(''),\n        port: new FormControl(0),\n        scheme: new FormControl('https://'),\n    });\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.rest.valueChanges.subscribe(() => {\n            this.restEvent.emit(this.rest);\n        });\n    }\n\n    ngOnChanges() {\n        try {\n            this.rest.patchValue(this.config.server.restApi);\n        } catch (e) {\n            if (!(e instanceof TypeError)) {\n                console.error(e);\n            }\n        }\n    }\n}\n","<div style=\"margin: 0 15px;\">\n  <!-- <h3 style=\"text-align: center; color:rgb(0, 80, 155);;\">REST Settings</h3> -->\n  <form [formGroup]=\"rest\">\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <label class=\"input-group-text\" for=\"inputGroupSelect01\">Scheme</label>\n      </div>\n      <select\n        class=\"custom-select\"\n        id=\"inputGroupSelect01\"\n        formControlName=\"scheme\"\n        required\n      >\n        <option value=\"http://\">http://</option>\n        <option selected value=\"https://\">https://</option>\n      </select>\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Host</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"host\"\n        class=\"form-control\"\n        placeholder=\"IP or Domain\"\n        aria-label=\"Host\"\n        required\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Port</span>\n      </div>\n      <input\n        type=\"number\"\n        formControlName=\"port\"\n        max=\"65535\"\n        min=\"0\"\n        class=\"form-control\"\n        placeholder=\"443\"\n        aria-label=\"Port\"\n        required\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Username</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"username\"\n        class=\"form-control\"\n        placeholder=\"john.smith\"\n        aria-label=\"Username\"\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Password</span>\n      </div>\n      <input\n        type=\"password\"\n        formControlName=\"password\"\n        class=\"form-control\"\n        placeholder=\"******\"\n        aria-label=\"Password\"\n      />\n    </div>\n\n    <hr />\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Login URL</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"uriLogin\"\n        class=\"form-control\"\n        placeholder=\"/api/internal/login\"\n        aria-label=\"loginUrl\"\n        required\n      />\n    </div>\n\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"basic-addon1\">Base API URL</span>\n      </div>\n      <input\n        type=\"text\"\n        formControlName=\"uri\"\n        class=\"form-control\"\n        placeholder=\"/api\"\n        aria-label=\"apiUrl\"\n        required\n      />\n    </div>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","module.exports = require(\"electron\");"]}